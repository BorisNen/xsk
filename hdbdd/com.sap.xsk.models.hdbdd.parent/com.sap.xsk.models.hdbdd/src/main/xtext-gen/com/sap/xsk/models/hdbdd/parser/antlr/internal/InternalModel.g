/*
 * generated by Xtext 2.18.0
 */
grammar InternalModel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.sap.xsk.models.hdbdd.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.sap.xsk.models.hdbdd.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.sap.xsk.models.hdbdd.services.ModelGrammarAccess;

}

@parser::members {

 	private ModelGrammarAccess grammarAccess;

    public InternalModelParser(TokenStream input, ModelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "HdbDD";
   	}

   	@Override
   	protected ModelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHdbDD
entryRuleHdbDD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHdbDDRule()); }
	iv_ruleHdbDD=ruleHdbDD
	{ $current=$iv_ruleHdbDD.current; }
	EOF;

// Rule HdbDD
ruleHdbDD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getHdbDDAccess().getElementsTypeParserRuleCall_0());
			}
			lv_elements_0_0=ruleType
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getHdbDDRule());
				}
				add(
					$current,
					"elements",
					lv_elements_0_0,
					"com.sap.xsk.models.hdbdd.Model.Type");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypeAccess().getNamespaceParserRuleCall_0());
		}
		this_Namespace_0=ruleNamespace
		{
			$current = $this_Namespace_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getSchemaParserRuleCall_1());
		}
		this_Schema_1=ruleSchema
		{
			$current = $this_Schema_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypeAccess().getContextParserRuleCall_2());
		}
		this_Context_2=ruleContext
		{
			$current = $this_Context_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNamespace
entryRuleNamespace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); }
	iv_ruleNamespace=ruleNamespace
	{ $current=$iv_ruleNamespace.current; }
	EOF;

// Rule Namespace
ruleNamespace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='namespace'
		{
			newLeafNode(otherlv_0, grammarAccess.getNamespaceAccess().getNamespaceKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNamespaceAccess().getNameQualifiedNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNamespaceRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"com.sap.xsk.models.hdbdd.Model.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getNamespaceAccess().getSemicolonKeyword_2());
		}
	)
;

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	iv_ruleQualifiedName=ruleQualifiedName
	{ $current=$iv_ruleQualifiedName.current.getText(); }
	EOF;

// Rule QualifiedName
ruleQualifiedName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_ID_0=RULE_ID
		{
			$current.merge(this_ID_0);
		}
		{
			newLeafNode(this_ID_0, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0());
		}
		(
			kw='.'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0());
			}
			this_ID_2=RULE_ID
			{
				$current.merge(this_ID_2);
			}
			{
				newLeafNode(this_ID_2, grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1());
			}
		)*
	)
;

// Entry rule entryRuleSchema
entryRuleSchema returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSchemaRule()); }
	iv_ruleSchema=ruleSchema
	{ $current=$iv_ruleSchema.current; }
	EOF;

// Rule Schema
ruleSchema returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='@Schema'
		{
			newLeafNode(otherlv_0, grammarAccess.getSchemaAccess().getSchemaKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSchemaAccess().getColonKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSchemaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='context'
		{
			newLeafNode(otherlv_0, grammarAccess.getContextAccess().getContextKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContextAccess().getTypesTypeDefinitionParserRuleCall_3_0());
				}
				lv_types_3_0=ruleTypeDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextRule());
					}
					add(
						$current,
						"types",
						lv_types_3_0,
						"com.sap.xsk.models.hdbdd.Model.TypeDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getContextAccess().getEntitiesEntityParserRuleCall_4_0());
				}
				lv_entities_4_0=ruleEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContextRule());
					}
					add(
						$current,
						"entities",
						lv_entities_4_0,
						"com.sap.xsk.models.hdbdd.Model.Entity");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getContextAccess().getRightCurlyBracketKeyword_5());
		}
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getContextAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefinitionRule()); }
	iv_ruleTypeDefinition=ruleTypeDefinition
	{ $current=$iv_ruleTypeDefinition.current; }
	EOF;

// Rule TypeDefinition
ruleTypeDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDefinitionAccess().getTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getTypeDefinitionAccess().getColonKeyword_2());
		}
		(
			(
				lv_fieldType_3_0=RULE_ID
				{
					newLeafNode(lv_fieldType_3_0, grammarAccess.getTypeDefinitionAccess().getFieldTypeIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"fieldType",
						lv_fieldType_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getTypeDefinitionAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					lv_fieldLength_5_0=RULE_INT
					{
						newLeafNode(lv_fieldLength_5_0, grammarAccess.getTypeDefinitionAccess().getFieldLengthINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTypeDefinitionRule());
						}
						setWithLastConsumed(
							$current,
							"fieldLength",
							lv_fieldLength_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getTypeDefinitionAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getTypeDefinitionAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getFieldsFieldParserRuleCall_3_0());
				}
				lv_fields_3_0=ruleField
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"fields",
						lv_fields_3_0,
						"com.sap.xsk.models.hdbdd.Model.Field");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4());
		}
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getEntityAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleField
entryRuleField returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldRule()); }
	iv_ruleField=ruleField
	{ $current=$iv_ruleField.current; }
	EOF;

// Rule Field
ruleField returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFieldAccess().getFieldPrimitiveParserRuleCall_0());
		}
		this_FieldPrimitive_0=ruleFieldPrimitive
		{
			$current = $this_FieldPrimitive_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldAccess().getFieldReferenceParserRuleCall_1());
		}
		this_FieldReference_1=ruleFieldReference
		{
			$current = $this_FieldReference_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFieldAccess().getFieldTypeParserRuleCall_2());
		}
		this_FieldType_2=ruleFieldType
		{
			$current = $this_FieldType_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleFieldPrimitive
entryRuleFieldPrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldPrimitiveRule()); }
	iv_ruleFieldPrimitive=ruleFieldPrimitive
	{ $current=$iv_ruleFieldPrimitive.current; }
	EOF;

// Rule FieldPrimitive
ruleFieldPrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='key'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getFieldPrimitiveAccess().getKeyKeyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldPrimitiveRule());
					}
					setWithLastConsumed($current, "key", true, "key");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldPrimitiveAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldPrimitiveAccess().getColonKeyword_2());
		}
		(
			(
				lv_fieldType_3_0=RULE_ID
				{
					newLeafNode(lv_fieldType_3_0, grammarAccess.getFieldPrimitiveAccess().getFieldTypeIDTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"fieldType",
						lv_fieldType_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_4='('
			{
				newLeafNode(otherlv_4, grammarAccess.getFieldPrimitiveAccess().getLeftParenthesisKeyword_4_0());
			}
			(
				(
					lv_fieldLength_5_0=RULE_INT
					{
						newLeafNode(lv_fieldLength_5_0, grammarAccess.getFieldPrimitiveAccess().getFieldLengthINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFieldPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"fieldLength",
							lv_fieldLength_5_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getFieldPrimitiveAccess().getRightParenthesisKeyword_4_2());
			}
		)?
		(
			(
				lv_fieldPredefinedType_7_0=RULE_STRING
				{
					newLeafNode(lv_fieldPredefinedType_7_0, grammarAccess.getFieldPrimitiveAccess().getFieldPredefinedTypeSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldPrimitiveRule());
					}
					setWithLastConsumed(
						$current,
						"fieldPredefinedType",
						lv_fieldPredefinedType_7_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getFieldPrimitiveAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleFieldType
entryRuleFieldType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldTypeRule()); }
	iv_ruleFieldType=ruleFieldType
	{ $current=$iv_ruleFieldType.current; }
	EOF;

// Rule FieldType
ruleFieldType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0='key'
				{
					newLeafNode(lv_key_0_0, grammarAccess.getFieldTypeAccess().getKeyKeyKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldTypeRule());
					}
					setWithLastConsumed($current, "key", true, "key");
				}
			)
		)?
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFieldTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getFieldTypeAccess().getColonKeyword_2());
		}
		(
			(
				lv_fieldPredefinedType_3_0=RULE_STRING
				{
					newLeafNode(lv_fieldPredefinedType_3_0, grammarAccess.getFieldTypeAccess().getFieldPredefinedTypeSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldTypeRule());
					}
					setWithLastConsumed(
						$current,
						"fieldPredefinedType",
						lv_fieldPredefinedType_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getFieldTypeAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleFieldReference
entryRuleFieldReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFieldReferenceRule()); }
	iv_ruleFieldReference=ruleFieldReference
	{ $current=$iv_ruleFieldReference.current; }
	EOF;

// Rule FieldReference
ruleFieldReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getFieldReferenceAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFieldReferenceAccess().getColonKeyword_1());
		}
		(
			(
				lv_referenceType_2_0=RULE_ID
				{
					newLeafNode(lv_referenceType_2_0, grammarAccess.getFieldReferenceAccess().getReferenceTypeIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"referenceType",
						lv_referenceType_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3='[*]'
		{
			newLeafNode(otherlv_3, grammarAccess.getFieldReferenceAccess().getLeftSquareBracketAsteriskRightSquareBracketKeyword_3());
		}
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getFieldReferenceAccess().getToKeyword_4());
		}
		(
			(
				lv_fieldReferenceEntity_5_0=RULE_ID
				{
					newLeafNode(lv_fieldReferenceEntity_5_0, grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"fieldReferenceEntity",
						lv_fieldReferenceEntity_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='on'
		{
			newLeafNode(otherlv_6, grammarAccess.getFieldReferenceAccess().getOnKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityLocalIdQualifiedNameParserRuleCall_7_0());
				}
				lv_fieldReferenceEntityLocalId_7_0=ruleQualifiedName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFieldReferenceRule());
					}
					set(
						$current,
						"fieldReferenceEntityLocalId",
						lv_fieldReferenceEntityLocalId_7_0,
						"com.sap.xsk.models.hdbdd.Model.QualifiedName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getFieldReferenceAccess().getEqualsSignKeyword_8());
		}
		(
			(
				lv_fieldReferenceEntityForeignId_9_0=RULE_ID
				{
					newLeafNode(lv_fieldReferenceEntityForeignId_9_0, grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityForeignIdIDTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFieldReferenceRule());
					}
					setWithLastConsumed(
						$current,
						"fieldReferenceEntityForeignId",
						lv_fieldReferenceEntityForeignId_9_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_10=';'
		{
			newLeafNode(otherlv_10, grammarAccess.getFieldReferenceAccess().getSemicolonKeyword_10());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
