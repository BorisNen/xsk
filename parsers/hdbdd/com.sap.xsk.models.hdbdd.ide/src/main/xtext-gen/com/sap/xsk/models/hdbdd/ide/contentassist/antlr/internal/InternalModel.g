/*
 * generated by Xtext 2.18.0
 */
grammar InternalModel;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package com.sap.xsk.models.hdbdd.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package com.sap.xsk.models.hdbdd.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import com.sap.xsk.models.hdbdd.services.ModelGrammarAccess;

}
@parser::members {
	private ModelGrammarAccess grammarAccess;

	public void setGrammarAccess(ModelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleHdbDD
entryRuleHdbDD
:
{ before(grammarAccess.getHdbDDRule()); }
	 ruleHdbDD
{ after(grammarAccess.getHdbDDRule()); } 
	 EOF 
;

// Rule HdbDD
ruleHdbDD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHdbDDAccess().getElementsAssignment()); }
		(rule__HdbDD__ElementsAssignment)*
		{ after(grammarAccess.getHdbDDAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamespace
entryRuleNamespace
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceAccess().getGroup()); }
		(rule__Namespace__Group__0)
		{ after(grammarAccess.getNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSchema
entryRuleSchema
:
{ before(grammarAccess.getSchemaRule()); }
	 ruleSchema
{ after(grammarAccess.getSchemaRule()); } 
	 EOF 
;

// Rule Schema
ruleSchema 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSchemaAccess().getGroup()); }
		(rule__Schema__Group__0)
		{ after(grammarAccess.getSchemaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContext
entryRuleContext
:
{ before(grammarAccess.getContextRule()); }
	 ruleContext
{ after(grammarAccess.getContextRule()); } 
	 EOF 
;

// Rule Context
ruleContext 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContextAccess().getGroup()); }
		(rule__Context__Group__0)
		{ after(grammarAccess.getContextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDefinition
entryRuleTypeDefinition
:
{ before(grammarAccess.getTypeDefinitionRule()); }
	 ruleTypeDefinition
{ after(grammarAccess.getTypeDefinitionRule()); } 
	 EOF 
;

// Rule TypeDefinition
ruleTypeDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getGroup()); }
		(rule__TypeDefinition__Group__0)
		{ after(grammarAccess.getTypeDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleField
entryRuleField
:
{ before(grammarAccess.getFieldRule()); }
	 ruleField
{ after(grammarAccess.getFieldRule()); } 
	 EOF 
;

// Rule Field
ruleField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldAccess().getAlternatives()); }
		(rule__Field__Alternatives)
		{ after(grammarAccess.getFieldAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldPrimitive
entryRuleFieldPrimitive
:
{ before(grammarAccess.getFieldPrimitiveRule()); }
	 ruleFieldPrimitive
{ after(grammarAccess.getFieldPrimitiveRule()); } 
	 EOF 
;

// Rule FieldPrimitive
ruleFieldPrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldPrimitiveAccess().getGroup()); }
		(rule__FieldPrimitive__Group__0)
		{ after(grammarAccess.getFieldPrimitiveAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldType
entryRuleFieldType
:
{ before(grammarAccess.getFieldTypeRule()); }
	 ruleFieldType
{ after(grammarAccess.getFieldTypeRule()); } 
	 EOF 
;

// Rule FieldType
ruleFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldTypeAccess().getGroup()); }
		(rule__FieldType__Group__0)
		{ after(grammarAccess.getFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFieldReference
entryRuleFieldReference
:
{ before(grammarAccess.getFieldReferenceRule()); }
	 ruleFieldReference
{ after(grammarAccess.getFieldReferenceRule()); } 
	 EOF 
;

// Rule FieldReference
ruleFieldReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldReferenceAccess().getGroup()); }
		(rule__FieldReference__Group__0)
		{ after(grammarAccess.getFieldReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNamespaceParserRuleCall_0()); }
		ruleNamespace
		{ after(grammarAccess.getTypeAccess().getNamespaceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getSchemaParserRuleCall_1()); }
		ruleSchema
		{ after(grammarAccess.getTypeAccess().getSchemaParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getContextParserRuleCall_2()); }
		ruleContext
		{ after(grammarAccess.getTypeAccess().getContextParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldAccess().getFieldPrimitiveParserRuleCall_0()); }
		ruleFieldPrimitive
		{ after(grammarAccess.getFieldAccess().getFieldPrimitiveParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getFieldReferenceParserRuleCall_1()); }
		ruleFieldReference
		{ after(grammarAccess.getFieldAccess().getFieldReferenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldAccess().getFieldTypeParserRuleCall_2()); }
		ruleFieldType
		{ after(grammarAccess.getFieldAccess().getFieldTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Namespace__Group__0__Impl
	rule__Namespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }
	'namespace'
	{ after(grammarAccess.getNamespaceAccess().getNamespaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Namespace__Group__1__Impl
	rule__Namespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
	(rule__Namespace__NameAssignment_1)
	{ after(grammarAccess.getNamespaceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Namespace__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNamespaceAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getNamespaceAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Schema__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__0__Impl
	rule__Schema__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getSchemaKeyword_0()); }
	'@Schema'
	{ after(grammarAccess.getSchemaAccess().getSchemaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__1__Impl
	rule__Schema__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSchemaAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Schema__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSchemaAccess().getNameAssignment_2()); }
	(rule__Schema__NameAssignment_2)
	{ after(grammarAccess.getSchemaAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Context__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__0__Impl
	rule__Context__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getContextKeyword_0()); }
	'context'
	{ after(grammarAccess.getContextAccess().getContextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__1__Impl
	rule__Context__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getNameAssignment_1()); }
	(rule__Context__NameAssignment_1)
	{ after(grammarAccess.getContextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__2__Impl
	rule__Context__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContextAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__3__Impl
	rule__Context__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getTypesAssignment_3()); }
	(rule__Context__TypesAssignment_3)*
	{ after(grammarAccess.getContextAccess().getTypesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__4__Impl
	rule__Context__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getEntitiesAssignment_4()); }
	(rule__Context__EntitiesAssignment_4)*
	{ after(grammarAccess.getContextAccess().getEntitiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__5__Impl
	rule__Context__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getContextAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Context__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContextAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getContextAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group__0__Impl
	rule__TypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getTypeDefinitionAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group__1__Impl
	rule__TypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getNameAssignment_1()); }
	(rule__TypeDefinition__NameAssignment_1)
	{ after(grammarAccess.getTypeDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group__2__Impl
	rule__TypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getTypeDefinitionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group__3__Impl
	rule__TypeDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getFieldTypeAssignment_3()); }
	(rule__TypeDefinition__FieldTypeAssignment_3)
	{ after(grammarAccess.getTypeDefinitionAccess().getFieldTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group__4__Impl
	rule__TypeDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getGroup_4()); }
	(rule__TypeDefinition__Group_4__0)?
	{ after(grammarAccess.getTypeDefinitionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getTypeDefinitionAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDefinition__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group_4__0__Impl
	rule__TypeDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getTypeDefinitionAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group_4__1__Impl
	rule__TypeDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getFieldLengthAssignment_4_1()); }
	(rule__TypeDefinition__FieldLengthAssignment_4_1)
	{ after(grammarAccess.getTypeDefinitionAccess().getFieldLengthAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefinitionAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getTypeDefinitionAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getFieldsAssignment_3()); }
	(rule__Entity__FieldsAssignment_3)*
	{ after(grammarAccess.getEntityAccess().getFieldsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getEntityAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPrimitive__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__0__Impl
	rule__FieldPrimitive__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getKeyAssignment_0()); }
	(rule__FieldPrimitive__KeyAssignment_0)?
	{ after(grammarAccess.getFieldPrimitiveAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__1__Impl
	rule__FieldPrimitive__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getNameAssignment_1()); }
	(rule__FieldPrimitive__NameAssignment_1)
	{ after(grammarAccess.getFieldPrimitiveAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__2__Impl
	rule__FieldPrimitive__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFieldPrimitiveAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__3__Impl
	rule__FieldPrimitive__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getFieldTypeAssignment_3()); }
	(rule__FieldPrimitive__FieldTypeAssignment_3)
	{ after(grammarAccess.getFieldPrimitiveAccess().getFieldTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__4__Impl
	rule__FieldPrimitive__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getGroup_4()); }
	(rule__FieldPrimitive__Group_4__0)?
	{ after(grammarAccess.getFieldPrimitiveAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__5__Impl
	rule__FieldPrimitive__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getFieldPredefinedTypeAssignment_5()); }
	(rule__FieldPrimitive__FieldPredefinedTypeAssignment_5)?
	{ after(grammarAccess.getFieldPrimitiveAccess().getFieldPredefinedTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getFieldPrimitiveAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldPrimitive__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group_4__0__Impl
	rule__FieldPrimitive__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getLeftParenthesisKeyword_4_0()); }
	'('
	{ after(grammarAccess.getFieldPrimitiveAccess().getLeftParenthesisKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group_4__1__Impl
	rule__FieldPrimitive__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getFieldLengthAssignment_4_1()); }
	(rule__FieldPrimitive__FieldLengthAssignment_4_1)
	{ after(grammarAccess.getFieldPrimitiveAccess().getFieldLengthAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldPrimitive__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldPrimitiveAccess().getRightParenthesisKeyword_4_2()); }
	')'
	{ after(grammarAccess.getFieldPrimitiveAccess().getRightParenthesisKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__0__Impl
	rule__FieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getKeyAssignment_0()); }
	(rule__FieldType__KeyAssignment_0)?
	{ after(grammarAccess.getFieldTypeAccess().getKeyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__1__Impl
	rule__FieldType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getNameAssignment_1()); }
	(rule__FieldType__NameAssignment_1)
	{ after(grammarAccess.getFieldTypeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__2__Impl
	rule__FieldType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getFieldTypeAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__3__Impl
	rule__FieldType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getFieldPredefinedTypeAssignment_3()); }
	(rule__FieldType__FieldPredefinedTypeAssignment_3)?
	{ after(grammarAccess.getFieldTypeAccess().getFieldPredefinedTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldType__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldTypeAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getFieldTypeAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FieldReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__0__Impl
	rule__FieldReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getNameAssignment_0()); }
	(rule__FieldReference__NameAssignment_0)
	{ after(grammarAccess.getFieldReferenceAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__1__Impl
	rule__FieldReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFieldReferenceAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__2__Impl
	rule__FieldReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getReferenceTypeAssignment_2()); }
	(rule__FieldReference__ReferenceTypeAssignment_2)
	{ after(grammarAccess.getFieldReferenceAccess().getReferenceTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__3__Impl
	rule__FieldReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getLeftSquareBracketAsteriskRightSquareBracketKeyword_3()); }
	'[*]'
	{ after(grammarAccess.getFieldReferenceAccess().getLeftSquareBracketAsteriskRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__4__Impl
	rule__FieldReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getToKeyword_4()); }
	'to'
	{ after(grammarAccess.getFieldReferenceAccess().getToKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__5__Impl
	rule__FieldReference__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityAssignment_5()); }
	(rule__FieldReference__FieldReferenceEntityAssignment_5)
	{ after(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__6__Impl
	rule__FieldReference__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getOnKeyword_6()); }
	'on'
	{ after(grammarAccess.getFieldReferenceAccess().getOnKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__7__Impl
	rule__FieldReference__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityLocalIdAssignment_7()); }
	(rule__FieldReference__FieldReferenceEntityLocalIdAssignment_7)
	{ after(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityLocalIdAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__8__Impl
	rule__FieldReference__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getEqualsSignKeyword_8()); }
	'='
	{ after(grammarAccess.getFieldReferenceAccess().getEqualsSignKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__9__Impl
	rule__FieldReference__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityForeignIdAssignment_9()); }
	(rule__FieldReference__FieldReferenceEntityForeignIdAssignment_9)
	{ after(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityForeignIdAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FieldReference__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFieldReferenceAccess().getSemicolonKeyword_10()); }
	';'
	{ after(grammarAccess.getFieldReferenceAccess().getSemicolonKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__HdbDD__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHdbDDAccess().getElementsTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getHdbDDAccess().getElementsTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getNamespaceAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Schema__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSchemaAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContextAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__TypesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getTypesTypeDefinitionParserRuleCall_3_0()); }
		ruleTypeDefinition
		{ after(grammarAccess.getContextAccess().getTypesTypeDefinitionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Context__EntitiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContextAccess().getEntitiesEntityParserRuleCall_4_0()); }
		ruleEntity
		{ after(grammarAccess.getContextAccess().getEntitiesEntityParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__FieldTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getFieldTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefinitionAccess().getFieldTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDefinition__FieldLengthAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefinitionAccess().getFieldLengthINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTypeDefinitionAccess().getFieldLengthINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FieldsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFieldsFieldParserRuleCall_3_0()); }
		ruleField
		{ after(grammarAccess.getEntityAccess().getFieldsFieldParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPrimitiveAccess().getKeyKeyKeyword_0_0()); }
		(
			{ before(grammarAccess.getFieldPrimitiveAccess().getKeyKeyKeyword_0_0()); }
			'key'
			{ after(grammarAccess.getFieldPrimitiveAccess().getKeyKeyKeyword_0_0()); }
		)
		{ after(grammarAccess.getFieldPrimitiveAccess().getKeyKeyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPrimitiveAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldPrimitiveAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__FieldTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPrimitiveAccess().getFieldTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldPrimitiveAccess().getFieldTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__FieldLengthAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPrimitiveAccess().getFieldLengthINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getFieldPrimitiveAccess().getFieldLengthINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldPrimitive__FieldPredefinedTypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldPrimitiveAccess().getFieldPredefinedTypeSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldPrimitiveAccess().getFieldPredefinedTypeSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__KeyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getKeyKeyKeyword_0_0()); }
		(
			{ before(grammarAccess.getFieldTypeAccess().getKeyKeyKeyword_0_0()); }
			'key'
			{ after(grammarAccess.getFieldTypeAccess().getKeyKeyKeyword_0_0()); }
		)
		{ after(grammarAccess.getFieldTypeAccess().getKeyKeyKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldTypeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__FieldPredefinedTypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getFieldPredefinedTypeSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getFieldTypeAccess().getFieldPredefinedTypeSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldReferenceAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldReferenceAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__ReferenceTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldReferenceAccess().getReferenceTypeIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldReferenceAccess().getReferenceTypeIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__FieldReferenceEntityAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityIDTerminalRuleCall_5_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityIDTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__FieldReferenceEntityLocalIdAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityLocalIdQualifiedNameParserRuleCall_7_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityLocalIdQualifiedNameParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldReference__FieldReferenceEntityForeignIdAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityForeignIdIDTerminalRuleCall_9_0()); }
		RULE_ID
		{ after(grammarAccess.getFieldReferenceAccess().getFieldReferenceEntityForeignIdIDTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
