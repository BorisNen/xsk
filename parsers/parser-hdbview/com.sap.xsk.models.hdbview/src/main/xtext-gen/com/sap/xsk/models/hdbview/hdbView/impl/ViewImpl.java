/**
 * generated by Xtext 2.18.0
 */
package com.sap.xsk.models.hdbview.hdbView.impl;

import com.sap.xsk.models.hdbview.hdbView.HdbViewPackage;
import com.sap.xsk.models.hdbview.hdbView.View;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>View</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.sap.xsk.models.hdbview.hdbView.impl.ViewImpl#isSchema <em>Schema</em>}</li>
 *   <li>{@link com.sap.xsk.models.hdbview.hdbView.impl.ViewImpl#getSchemaName <em>Schema Name</em>}</li>
 *   <li>{@link com.sap.xsk.models.hdbview.hdbView.impl.ViewImpl#isQuery <em>Query</em>}</li>
 *   <li>{@link com.sap.xsk.models.hdbview.hdbView.impl.ViewImpl#getQueryValue <em>Query Value</em>}</li>
 *   <li>{@link com.sap.xsk.models.hdbview.hdbView.impl.ViewImpl#isDependsOn <em>Depends On</em>}</li>
 *   <li>{@link com.sap.xsk.models.hdbview.hdbView.impl.ViewImpl#getDependsOnValues <em>Depends On Values</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ViewImpl extends MinimalEObjectImpl.Container implements View
{
  /**
   * The default value of the '{@link #isSchema() <em>Schema</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSchema()
   * @generated
   * @ordered
   */
  protected static final boolean SCHEMA_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isSchema() <em>Schema</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isSchema()
   * @generated
   * @ordered
   */
  protected boolean schema = SCHEMA_EDEFAULT;

  /**
   * The default value of the '{@link #getSchemaName() <em>Schema Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSchemaName()
   * @generated
   * @ordered
   */
  protected static final String SCHEMA_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSchemaName() <em>Schema Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSchemaName()
   * @generated
   * @ordered
   */
  protected String schemaName = SCHEMA_NAME_EDEFAULT;

  /**
   * The default value of the '{@link #isQuery() <em>Query</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isQuery()
   * @generated
   * @ordered
   */
  protected static final boolean QUERY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isQuery() <em>Query</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isQuery()
   * @generated
   * @ordered
   */
  protected boolean query = QUERY_EDEFAULT;

  /**
   * The default value of the '{@link #getQueryValue() <em>Query Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQueryValue()
   * @generated
   * @ordered
   */
  protected static final String QUERY_VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getQueryValue() <em>Query Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQueryValue()
   * @generated
   * @ordered
   */
  protected String queryValue = QUERY_VALUE_EDEFAULT;

  /**
   * The default value of the '{@link #isDependsOn() <em>Depends On</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDependsOn()
   * @generated
   * @ordered
   */
  protected static final boolean DEPENDS_ON_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDependsOn() <em>Depends On</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDependsOn()
   * @generated
   * @ordered
   */
  protected boolean dependsOn = DEPENDS_ON_EDEFAULT;

  /**
   * The cached value of the '{@link #getDependsOnValues() <em>Depends On Values</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDependsOnValues()
   * @generated
   * @ordered
   */
  protected EList<String> dependsOnValues;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ViewImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return HdbViewPackage.Literals.VIEW;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isSchema()
  {
    return schema;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSchema(boolean newSchema)
  {
    boolean oldSchema = schema;
    schema = newSchema;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HdbViewPackage.VIEW__SCHEMA, oldSchema, schema));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSchemaName()
  {
    return schemaName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSchemaName(String newSchemaName)
  {
    String oldSchemaName = schemaName;
    schemaName = newSchemaName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HdbViewPackage.VIEW__SCHEMA_NAME, oldSchemaName, schemaName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isQuery()
  {
    return query;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setQuery(boolean newQuery)
  {
    boolean oldQuery = query;
    query = newQuery;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HdbViewPackage.VIEW__QUERY, oldQuery, query));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getQueryValue()
  {
    return queryValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setQueryValue(String newQueryValue)
  {
    String oldQueryValue = queryValue;
    queryValue = newQueryValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HdbViewPackage.VIEW__QUERY_VALUE, oldQueryValue, queryValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDependsOn()
  {
    return dependsOn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDependsOn(boolean newDependsOn)
  {
    boolean oldDependsOn = dependsOn;
    dependsOn = newDependsOn;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, HdbViewPackage.VIEW__DEPENDS_ON, oldDependsOn, dependsOn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getDependsOnValues()
  {
    if (dependsOnValues == null)
    {
      dependsOnValues = new EDataTypeEList<String>(String.class, this, HdbViewPackage.VIEW__DEPENDS_ON_VALUES);
    }
    return dependsOnValues;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case HdbViewPackage.VIEW__SCHEMA:
        return isSchema();
      case HdbViewPackage.VIEW__SCHEMA_NAME:
        return getSchemaName();
      case HdbViewPackage.VIEW__QUERY:
        return isQuery();
      case HdbViewPackage.VIEW__QUERY_VALUE:
        return getQueryValue();
      case HdbViewPackage.VIEW__DEPENDS_ON:
        return isDependsOn();
      case HdbViewPackage.VIEW__DEPENDS_ON_VALUES:
        return getDependsOnValues();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case HdbViewPackage.VIEW__SCHEMA:
        setSchema((Boolean)newValue);
        return;
      case HdbViewPackage.VIEW__SCHEMA_NAME:
        setSchemaName((String)newValue);
        return;
      case HdbViewPackage.VIEW__QUERY:
        setQuery((Boolean)newValue);
        return;
      case HdbViewPackage.VIEW__QUERY_VALUE:
        setQueryValue((String)newValue);
        return;
      case HdbViewPackage.VIEW__DEPENDS_ON:
        setDependsOn((Boolean)newValue);
        return;
      case HdbViewPackage.VIEW__DEPENDS_ON_VALUES:
        getDependsOnValues().clear();
        getDependsOnValues().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case HdbViewPackage.VIEW__SCHEMA:
        setSchema(SCHEMA_EDEFAULT);
        return;
      case HdbViewPackage.VIEW__SCHEMA_NAME:
        setSchemaName(SCHEMA_NAME_EDEFAULT);
        return;
      case HdbViewPackage.VIEW__QUERY:
        setQuery(QUERY_EDEFAULT);
        return;
      case HdbViewPackage.VIEW__QUERY_VALUE:
        setQueryValue(QUERY_VALUE_EDEFAULT);
        return;
      case HdbViewPackage.VIEW__DEPENDS_ON:
        setDependsOn(DEPENDS_ON_EDEFAULT);
        return;
      case HdbViewPackage.VIEW__DEPENDS_ON_VALUES:
        getDependsOnValues().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case HdbViewPackage.VIEW__SCHEMA:
        return schema != SCHEMA_EDEFAULT;
      case HdbViewPackage.VIEW__SCHEMA_NAME:
        return SCHEMA_NAME_EDEFAULT == null ? schemaName != null : !SCHEMA_NAME_EDEFAULT.equals(schemaName);
      case HdbViewPackage.VIEW__QUERY:
        return query != QUERY_EDEFAULT;
      case HdbViewPackage.VIEW__QUERY_VALUE:
        return QUERY_VALUE_EDEFAULT == null ? queryValue != null : !QUERY_VALUE_EDEFAULT.equals(queryValue);
      case HdbViewPackage.VIEW__DEPENDS_ON:
        return dependsOn != DEPENDS_ON_EDEFAULT;
      case HdbViewPackage.VIEW__DEPENDS_ON_VALUES:
        return dependsOnValues != null && !dependsOnValues.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (schema: ");
    result.append(schema);
    result.append(", schemaName: ");
    result.append(schemaName);
    result.append(", query: ");
    result.append(query);
    result.append(", queryValue: ");
    result.append(queryValue);
    result.append(", dependsOn: ");
    result.append(dependsOn);
    result.append(", dependsOnValues: ");
    result.append(dependsOnValues);
    result.append(')');
    return result.toString();
  }

} //ViewImpl
