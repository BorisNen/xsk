/*
 * generated by Xtext 2.18.0
 */
package com.sap.xsk.models.hdbview.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.UnorderedGroup;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class HdbViewGrammarAccess extends AbstractGrammarElementFinder {
	
	public class HdbViewModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.sap.xsk.models.hdbview.HdbView.HdbViewModel");
		private final Assignment cViewElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cViewElementViewParserRuleCall_0 = (RuleCall)cViewElementAssignment.eContents().get(0);
		
		//HdbViewModel:
		//	viewElement=View;
		@Override public ParserRule getRule() { return rule; }
		
		//viewElement=View
		public Assignment getViewElementAssignment() { return cViewElementAssignment; }
		
		//View
		public RuleCall getViewElementViewParserRuleCall_0() { return cViewElementViewParserRuleCall_0; }
	}
	public class ViewElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "com.sap.xsk.models.hdbview.HdbView.View");
		private final UnorderedGroup cUnorderedGroup = (UnorderedGroup)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cUnorderedGroup.eContents().get(0);
		private final Assignment cSchemaAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final Keyword cSchemaSchemaKeyword_0_0_0 = (Keyword)cSchemaAssignment_0_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cSchemaNameAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cSchemaNameSTRINGTerminalRuleCall_0_2_0 = (RuleCall)cSchemaNameAssignment_0_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Group cGroup_1 = (Group)cUnorderedGroup.eContents().get(1);
		private final Assignment cQueryAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cQueryQueryKeyword_1_0_0 = (Keyword)cQueryAssignment_1_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cQueryValueAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cQueryValueSTRINGTerminalRuleCall_1_2_0 = (RuleCall)cQueryValueAssignment_1_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Group cGroup_2 = (Group)cUnorderedGroup.eContents().get(2);
		private final Assignment cDependsOnAssignment_2_0 = (Assignment)cGroup_2.eContents().get(0);
		private final Keyword cDependsOnDepends_onKeyword_2_0_0 = (Keyword)cDependsOnAssignment_2_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_2_3 = (Group)cGroup_2.eContents().get(3);
		private final Assignment cDependsOnValuesAssignment_2_3_0 = (Assignment)cGroup_2_3.eContents().get(0);
		private final RuleCall cDependsOnValuesSTRINGTerminalRuleCall_2_3_0_0 = (RuleCall)cDependsOnValuesAssignment_2_3_0.eContents().get(0);
		private final Group cGroup_2_3_1 = (Group)cGroup_2_3.eContents().get(1);
		private final Keyword cCommaKeyword_2_3_1_0 = (Keyword)cGroup_2_3_1.eContents().get(0);
		private final Assignment cDependsOnValuesAssignment_2_3_1_1 = (Assignment)cGroup_2_3_1.eContents().get(1);
		private final RuleCall cDependsOnValuesSTRINGTerminalRuleCall_2_3_1_1_0 = (RuleCall)cDependsOnValuesAssignment_2_3_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Keyword cSemicolonKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		
		//View:
		//	schema?='schema' '=' schemaName=STRING ';' & query?='query' '=' queryValue=STRING ';' & dependsOn?='depends_on' '='
		//	'[' (dependsOnValues+=STRING (',' dependsOnValues+=STRING)*)? ']' ';';
		@Override public ParserRule getRule() { return rule; }
		
		//schema?='schema' '=' schemaName=STRING ';' & query?='query' '=' queryValue=STRING ';' & dependsOn?='depends_on' '=' '['
		//(dependsOnValues+=STRING (',' dependsOnValues+=STRING)*)? ']' ';'
		public UnorderedGroup getUnorderedGroup() { return cUnorderedGroup; }
		
		//schema?='schema' '=' schemaName=STRING ';'
		public Group getGroup_0() { return cGroup_0; }
		
		//schema?='schema'
		public Assignment getSchemaAssignment_0_0() { return cSchemaAssignment_0_0; }
		
		//'schema'
		public Keyword getSchemaSchemaKeyword_0_0_0() { return cSchemaSchemaKeyword_0_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_0_1() { return cEqualsSignKeyword_0_1; }
		
		//schemaName=STRING
		public Assignment getSchemaNameAssignment_0_2() { return cSchemaNameAssignment_0_2; }
		
		//STRING
		public RuleCall getSchemaNameSTRINGTerminalRuleCall_0_2_0() { return cSchemaNameSTRINGTerminalRuleCall_0_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_0_3() { return cSemicolonKeyword_0_3; }
		
		//query?='query' '=' queryValue=STRING ';'
		public Group getGroup_1() { return cGroup_1; }
		
		//query?='query'
		public Assignment getQueryAssignment_1_0() { return cQueryAssignment_1_0; }
		
		//'query'
		public Keyword getQueryQueryKeyword_1_0_0() { return cQueryQueryKeyword_1_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1_1() { return cEqualsSignKeyword_1_1; }
		
		//queryValue=STRING
		public Assignment getQueryValueAssignment_1_2() { return cQueryValueAssignment_1_2; }
		
		//STRING
		public RuleCall getQueryValueSTRINGTerminalRuleCall_1_2_0() { return cQueryValueSTRINGTerminalRuleCall_1_2_0; }
		
		//';'
		public Keyword getSemicolonKeyword_1_3() { return cSemicolonKeyword_1_3; }
		
		//dependsOn?='depends_on' '=' '[' (dependsOnValues+=STRING (',' dependsOnValues+=STRING)*)? ']' ';'
		public Group getGroup_2() { return cGroup_2; }
		
		//dependsOn?='depends_on'
		public Assignment getDependsOnAssignment_2_0() { return cDependsOnAssignment_2_0; }
		
		//'depends_on'
		public Keyword getDependsOnDepends_onKeyword_2_0_0() { return cDependsOnDepends_onKeyword_2_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_2_1() { return cEqualsSignKeyword_2_1; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_2_2() { return cLeftSquareBracketKeyword_2_2; }
		
		//(dependsOnValues+=STRING (',' dependsOnValues+=STRING)*)?
		public Group getGroup_2_3() { return cGroup_2_3; }
		
		//dependsOnValues+=STRING
		public Assignment getDependsOnValuesAssignment_2_3_0() { return cDependsOnValuesAssignment_2_3_0; }
		
		//STRING
		public RuleCall getDependsOnValuesSTRINGTerminalRuleCall_2_3_0_0() { return cDependsOnValuesSTRINGTerminalRuleCall_2_3_0_0; }
		
		//(',' dependsOnValues+=STRING)*
		public Group getGroup_2_3_1() { return cGroup_2_3_1; }
		
		//','
		public Keyword getCommaKeyword_2_3_1_0() { return cCommaKeyword_2_3_1_0; }
		
		//dependsOnValues+=STRING
		public Assignment getDependsOnValuesAssignment_2_3_1_1() { return cDependsOnValuesAssignment_2_3_1_1; }
		
		//STRING
		public RuleCall getDependsOnValuesSTRINGTerminalRuleCall_2_3_1_1_0() { return cDependsOnValuesSTRINGTerminalRuleCall_2_3_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_2_4() { return cRightSquareBracketKeyword_2_4; }
		
		//';'
		public Keyword getSemicolonKeyword_2_5() { return cSemicolonKeyword_2_5; }
	}
	
	
	private final HdbViewModelElements pHdbViewModel;
	private final TerminalRule tBOOL;
	private final ViewElements pView;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public HdbViewGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pHdbViewModel = new HdbViewModelElements();
		this.tBOOL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "com.sap.xsk.models.hdbview.HdbView.BOOL");
		this.pView = new ViewElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("com.sap.xsk.models.hdbview.HdbView".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//HdbViewModel:
	//	viewElement=View;
	public HdbViewModelElements getHdbViewModelAccess() {
		return pHdbViewModel;
	}
	
	public ParserRule getHdbViewModelRule() {
		return getHdbViewModelAccess().getRule();
	}
	
	//terminal BOOL:
	//	'true' | 'false';
	public TerminalRule getBOOLRule() {
		return tBOOL;
	}
	
	//View:
	//	schema?='schema' '=' schemaName=STRING ';' & query?='query' '=' queryValue=STRING ';' & dependsOn?='depends_on' '='
	//	'[' (dependsOnValues+=STRING (',' dependsOnValues+=STRING)*)? ']' ';';
	public ViewElements getViewAccess() {
		return pView;
	}
	
	public ParserRule getViewRule() {
		return getViewAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
