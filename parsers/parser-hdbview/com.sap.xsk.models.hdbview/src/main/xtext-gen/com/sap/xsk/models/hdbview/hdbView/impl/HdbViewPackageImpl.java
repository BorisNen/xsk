/**
 * generated by Xtext 2.18.0
 */
package com.sap.xsk.models.hdbview.hdbView.impl;

import com.sap.xsk.models.hdbview.hdbView.HdbViewFactory;
import com.sap.xsk.models.hdbview.hdbView.HdbViewModel;
import com.sap.xsk.models.hdbview.hdbView.HdbViewPackage;
import com.sap.xsk.models.hdbview.hdbView.View;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class HdbViewPackageImpl extends EPackageImpl implements HdbViewPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass hdbViewModelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass viewEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see com.sap.xsk.models.hdbview.hdbView.HdbViewPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private HdbViewPackageImpl()
  {
    super(eNS_URI, HdbViewFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   * 
   * <p>This method is used to initialize {@link HdbViewPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static HdbViewPackage init()
  {
    if (isInited) return (HdbViewPackage)EPackage.Registry.INSTANCE.getEPackage(HdbViewPackage.eNS_URI);

    // Obtain or create and register package
    HdbViewPackageImpl theHdbViewPackage = (HdbViewPackageImpl)(EPackage.Registry.INSTANCE.get(eNS_URI) instanceof HdbViewPackageImpl ? EPackage.Registry.INSTANCE.get(eNS_URI) : new HdbViewPackageImpl());

    isInited = true;

    // Create package meta-data objects
    theHdbViewPackage.createPackageContents();

    // Initialize created meta-data
    theHdbViewPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theHdbViewPackage.freeze();

  
    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(HdbViewPackage.eNS_URI, theHdbViewPackage);
    return theHdbViewPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getHdbViewModel()
  {
    return hdbViewModelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EReference getHdbViewModel_ViewElement()
  {
    return (EReference)hdbViewModelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EClass getView()
  {
    return viewEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getView_Schema()
  {
    return (EAttribute)viewEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getView_SchemaName()
  {
    return (EAttribute)viewEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getView_Query()
  {
    return (EAttribute)viewEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getView_QueryValue()
  {
    return (EAttribute)viewEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getView_DependsOn()
  {
    return (EAttribute)viewEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EAttribute getView_DependsOnValues()
  {
    return (EAttribute)viewEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HdbViewFactory getHdbViewFactory()
  {
    return (HdbViewFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    hdbViewModelEClass = createEClass(HDB_VIEW_MODEL);
    createEReference(hdbViewModelEClass, HDB_VIEW_MODEL__VIEW_ELEMENT);

    viewEClass = createEClass(VIEW);
    createEAttribute(viewEClass, VIEW__SCHEMA);
    createEAttribute(viewEClass, VIEW__SCHEMA_NAME);
    createEAttribute(viewEClass, VIEW__QUERY);
    createEAttribute(viewEClass, VIEW__QUERY_VALUE);
    createEAttribute(viewEClass, VIEW__DEPENDS_ON);
    createEAttribute(viewEClass, VIEW__DEPENDS_ON_VALUES);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(hdbViewModelEClass, HdbViewModel.class, "HdbViewModel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getHdbViewModel_ViewElement(), this.getView(), null, "viewElement", null, 0, 1, HdbViewModel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(viewEClass, View.class, "View", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getView_Schema(), ecorePackage.getEBoolean(), "schema", null, 0, 1, View.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getView_SchemaName(), ecorePackage.getEString(), "schemaName", null, 0, 1, View.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getView_Query(), ecorePackage.getEBoolean(), "query", null, 0, 1, View.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getView_QueryValue(), ecorePackage.getEString(), "queryValue", null, 0, 1, View.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getView_DependsOn(), ecorePackage.getEBoolean(), "dependsOn", null, 0, 1, View.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getView_DependsOnValues(), ecorePackage.getEString(), "dependsOnValues", null, 0, -1, View.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, !IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //HdbViewPackageImpl
