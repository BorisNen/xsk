/*
 * generated by Xtext 2.18.0
 */
grammar InternalHdbView;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.sap.xsk.models.hdbview.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.sap.xsk.models.hdbview.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.sap.xsk.models.hdbview.services.HdbViewGrammarAccess;

}

@parser::members {

 	private HdbViewGrammarAccess grammarAccess;

    public InternalHdbViewParser(TokenStream input, HdbViewGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "HdbViewModel";
   	}

   	@Override
   	protected HdbViewGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHdbViewModel
entryRuleHdbViewModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHdbViewModelRule()); }
	iv_ruleHdbViewModel=ruleHdbViewModel
	{ $current=$iv_ruleHdbViewModel.current; }
	EOF;

// Rule HdbViewModel
ruleHdbViewModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getHdbViewModelAccess().getViewElementViewParserRuleCall_0());
			}
			lv_viewElement_0_0=ruleView
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getHdbViewModelRule());
				}
				set(
					$current,
					"viewElement",
					lv_viewElement_0_0,
					"com.sap.xsk.models.hdbview.HdbView.View");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleView
entryRuleView returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getViewRule()); }
	iv_ruleView=ruleView
	{ $current=$iv_ruleView.current; }
	EOF;

// Rule View
ruleView returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getViewAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getViewAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getViewAccess().getUnorderedGroup(), 0);
				}
							({true}?=>((
								(
									lv_schema_1_0='schema'
									{
										newLeafNode(lv_schema_1_0, grammarAccess.getViewAccess().getSchemaSchemaKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getViewRule());
										}
										setWithLastConsumed($current, "schema", true, "schema");
									}
								)
							)
							otherlv_2='='
							{
								newLeafNode(otherlv_2, grammarAccess.getViewAccess().getEqualsSignKeyword_0_1());
							}
							(
								(
									lv_schemaName_3_0=RULE_STRING
									{
										newLeafNode(lv_schemaName_3_0, grammarAccess.getViewAccess().getSchemaNameSTRINGTerminalRuleCall_0_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getViewRule());
										}
										setWithLastConsumed(
											$current,
											"schemaName",
											lv_schemaName_3_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)
							otherlv_4=';'
							{
								newLeafNode(otherlv_4, grammarAccess.getViewAccess().getSemicolonKeyword_0_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getViewAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getViewAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getViewAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								(
									lv_query_5_0='query'
									{
										newLeafNode(lv_query_5_0, grammarAccess.getViewAccess().getQueryQueryKeyword_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getViewRule());
										}
										setWithLastConsumed($current, "query", true, "query");
									}
								)
							)
							otherlv_6='='
							{
								newLeafNode(otherlv_6, grammarAccess.getViewAccess().getEqualsSignKeyword_1_1());
							}
							(
								(
									lv_queryValue_7_0=RULE_STRING
									{
										newLeafNode(lv_queryValue_7_0, grammarAccess.getViewAccess().getQueryValueSTRINGTerminalRuleCall_1_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getViewRule());
										}
										setWithLastConsumed(
											$current,
											"queryValue",
											lv_queryValue_7_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)
							otherlv_8=';'
							{
								newLeafNode(otherlv_8, grammarAccess.getViewAccess().getSemicolonKeyword_1_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getViewAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getViewAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getViewAccess().getUnorderedGroup(), 2);
				}
							({true}?=>((
								(
									lv_dependsOn_9_0='depends_on'
									{
										newLeafNode(lv_dependsOn_9_0, grammarAccess.getViewAccess().getDependsOnDepends_onKeyword_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getViewRule());
										}
										setWithLastConsumed($current, "dependsOn", true, "depends_on");
									}
								)
							)
							otherlv_10='='
							{
								newLeafNode(otherlv_10, grammarAccess.getViewAccess().getEqualsSignKeyword_2_1());
							}
							otherlv_11='['
							{
								newLeafNode(otherlv_11, grammarAccess.getViewAccess().getLeftSquareBracketKeyword_2_2());
							}
							(
								(
									(
										lv_dependsOnValues_12_0=RULE_STRING
										{
											newLeafNode(lv_dependsOnValues_12_0, grammarAccess.getViewAccess().getDependsOnValuesSTRINGTerminalRuleCall_2_3_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getViewRule());
											}
											addWithLastConsumed(
												$current,
												"dependsOnValues",
												lv_dependsOnValues_12_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								(
									otherlv_13=','
									{
										newLeafNode(otherlv_13, grammarAccess.getViewAccess().getCommaKeyword_2_3_1_0());
									}
									(
										(
											lv_dependsOnValues_14_0=RULE_STRING
											{
												newLeafNode(lv_dependsOnValues_14_0, grammarAccess.getViewAccess().getDependsOnValuesSTRINGTerminalRuleCall_2_3_1_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getViewRule());
												}
												addWithLastConsumed(
													$current,
													"dependsOnValues",
													lv_dependsOnValues_14_0,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)*
							)?
							otherlv_15=']'
							{
								newLeafNode(otherlv_15, grammarAccess.getViewAccess().getRightSquareBracketKeyword_2_4());
							}
							otherlv_16=';'
							{
								newLeafNode(otherlv_16, grammarAccess.getViewAccess().getSemicolonKeyword_2_5());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getViewAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getViewAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getViewAccess().getUnorderedGroup());
			}
	)
;

RULE_BOOL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
