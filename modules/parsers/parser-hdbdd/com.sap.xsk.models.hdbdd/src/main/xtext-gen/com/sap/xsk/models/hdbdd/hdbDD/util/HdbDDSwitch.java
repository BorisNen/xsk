/**
 * generated by Xtext 2.18.0
 */
package com.sap.xsk.models.hdbdd.hdbDD.util;

import com.sap.xsk.models.hdbdd.hdbDD.Context;
import com.sap.xsk.models.hdbdd.hdbDD.Entity;
import com.sap.xsk.models.hdbdd.hdbDD.Field;
import com.sap.xsk.models.hdbdd.hdbDD.FieldPrimitive;
import com.sap.xsk.models.hdbdd.hdbDD.FieldReference;
import com.sap.xsk.models.hdbdd.hdbDD.FieldType;
import com.sap.xsk.models.hdbdd.hdbDD.HdbDD;
import com.sap.xsk.models.hdbdd.hdbDD.HdbDDPackage;
import com.sap.xsk.models.hdbdd.hdbDD.Namespace;
import com.sap.xsk.models.hdbdd.hdbDD.Schema;
import com.sap.xsk.models.hdbdd.hdbDD.Type;
import com.sap.xsk.models.hdbdd.hdbDD.TypeDefinition;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 *
 * @generated
 * @see com.sap.xsk.models.hdbdd.hdbDD.HdbDDPackage
 */
public class HdbDDSwitch<T> extends Switch<T> {

  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  protected static HdbDDPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public HdbDDSwitch() {
    if (modelPackage == null) {
      modelPackage = HdbDDPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage) {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject) {
    switch (classifierID) {
      case HdbDDPackage.HDB_DD: {
        HdbDD hdbDD = (HdbDD) theEObject;
        T result = caseHdbDD(hdbDD);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.TYPE: {
        Type type = (Type) theEObject;
        T result = caseType(type);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.NAMESPACE: {
        Namespace namespace = (Namespace) theEObject;
        T result = caseNamespace(namespace);
        if (result == null) {
          result = caseType(namespace);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.SCHEMA: {
        Schema schema = (Schema) theEObject;
        T result = caseSchema(schema);
        if (result == null) {
          result = caseType(schema);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.CONTEXT: {
        Context context = (Context) theEObject;
        T result = caseContext(context);
        if (result == null) {
          result = caseType(context);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.TYPE_DEFINITION: {
        TypeDefinition typeDefinition = (TypeDefinition) theEObject;
        T result = caseTypeDefinition(typeDefinition);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.ENTITY: {
        Entity entity = (Entity) theEObject;
        T result = caseEntity(entity);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.FIELD: {
        Field field = (Field) theEObject;
        T result = caseField(field);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.FIELD_PRIMITIVE: {
        FieldPrimitive fieldPrimitive = (FieldPrimitive) theEObject;
        T result = caseFieldPrimitive(fieldPrimitive);
        if (result == null) {
          result = caseField(fieldPrimitive);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.FIELD_TYPE: {
        FieldType fieldType = (FieldType) theEObject;
        T result = caseFieldType(fieldType);
        if (result == null) {
          result = caseField(fieldType);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case HdbDDPackage.FIELD_REFERENCE: {
        FieldReference fieldReference = (FieldReference) theEObject;
        T result = caseFieldReference(fieldReference);
        if (result == null) {
          result = caseField(fieldReference);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      default:
        return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hdb DD</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hdb DD</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseHdbDD(HdbDD object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseType(Type object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Namespace</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Namespace</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseNamespace(Namespace object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Schema</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Schema</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseSchema(Schema object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Context</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Context</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseContext(Context object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type Definition</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type Definition</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseTypeDefinition(TypeDefinition object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseEntity(Entity object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseField(Field object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field Primitive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field Primitive</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseFieldPrimitive(FieldPrimitive object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field Type</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseFieldType(FieldType object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Field Reference</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Field Reference</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseFieldReference(FieldReference object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   */
  @Override
  public T defaultCase(EObject object) {
    return null;
  }

} //HdbDDSwitch
