/** generated by Xtext 2.18.0 */
package com.sap.xsk.models.xsodata.xsOData.impl;

import com.sap.xsk.models.xsodata.xsOData.Association;
import com.sap.xsk.models.xsodata.xsOData.Entity;
import com.sap.xsk.models.xsodata.xsOData.Service;
import com.sap.xsk.models.xsodata.xsOData.XsODataPackage;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 *
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Service</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>The following features are implemented:
 *
 * <ul>
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.ServiceImpl#getName <em>Name</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.ServiceImpl#getEntities <em>Entities</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.ServiceImpl#getAssociations
 *       <em>Associations</em>}
 * </ul>
 *
 * @generated
 */
public class ServiceImpl extends TypeImpl implements Service {
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getEntities() <em>Entities</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getEntities()
   * @generated
   * @ordered
   */
  protected EList<Entity> entities;

  /**
   * The cached value of the '{@link #getAssociations() <em>Associations</em>}' containment
   * reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getAssociations()
   * @generated
   * @ordered
   */
  protected EList<Association> associations;

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  protected ServiceImpl() {
    super();
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  protected EClass eStaticClass() {
    return XsODataPackage.Literals.SERVICE;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getName() {
    return name;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setName(String newName) {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this, Notification.SET, XsODataPackage.SERVICE__NAME, oldName, name));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public EList<Entity> getEntities() {
    if (entities == null) {
      entities =
          new EObjectContainmentEList<Entity>(Entity.class, this, XsODataPackage.SERVICE__ENTITIES);
    }
    return entities;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public EList<Association> getAssociations() {
    if (associations == null) {
      associations =
          new EObjectContainmentEList<Association>(
              Association.class, this, XsODataPackage.SERVICE__ASSOCIATIONS);
    }
    return associations;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(
      InternalEObject otherEnd, int featureID, NotificationChain msgs) {
    switch (featureID) {
      case XsODataPackage.SERVICE__ENTITIES:
        return ((InternalEList<?>) getEntities()).basicRemove(otherEnd, msgs);
      case XsODataPackage.SERVICE__ASSOCIATIONS:
        return ((InternalEList<?>) getAssociations()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType) {
    switch (featureID) {
      case XsODataPackage.SERVICE__NAME:
        return getName();
      case XsODataPackage.SERVICE__ENTITIES:
        return getEntities();
      case XsODataPackage.SERVICE__ASSOCIATIONS:
        return getAssociations();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue) {
    switch (featureID) {
      case XsODataPackage.SERVICE__NAME:
        setName((String) newValue);
        return;
      case XsODataPackage.SERVICE__ENTITIES:
        getEntities().clear();
        getEntities().addAll((Collection<? extends Entity>) newValue);
        return;
      case XsODataPackage.SERVICE__ASSOCIATIONS:
        getAssociations().clear();
        getAssociations().addAll((Collection<? extends Association>) newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public void eUnset(int featureID) {
    switch (featureID) {
      case XsODataPackage.SERVICE__NAME:
        setName(NAME_EDEFAULT);
        return;
      case XsODataPackage.SERVICE__ENTITIES:
        getEntities().clear();
        return;
      case XsODataPackage.SERVICE__ASSOCIATIONS:
        getAssociations().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID) {
    switch (featureID) {
      case XsODataPackage.SERVICE__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case XsODataPackage.SERVICE__ENTITIES:
        return entities != null && !entities.isEmpty();
      case XsODataPackage.SERVICE__ASSOCIATIONS:
        return associations != null && !associations.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public String toString() {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }
} // ServiceImpl
