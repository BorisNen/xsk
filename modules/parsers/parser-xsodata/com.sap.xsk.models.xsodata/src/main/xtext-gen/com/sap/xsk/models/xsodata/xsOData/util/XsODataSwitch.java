/**
 * generated by Xtext 2.18.0
 */
package com.sap.xsk.models.xsodata.xsOData.util;

import com.sap.xsk.models.xsodata.xsOData.Association;
import com.sap.xsk.models.xsodata.xsOData.Entity;
import com.sap.xsk.models.xsodata.xsOData.Navigation;
import com.sap.xsk.models.xsodata.xsOData.Service;
import com.sap.xsk.models.xsodata.xsOData.Type;
import com.sap.xsk.models.xsodata.xsOData.XSOData;
import com.sap.xsk.models.xsodata.xsOData.XsODataPackage;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 *
 * @generated
 * @see com.sap.xsk.models.xsodata.xsOData.XsODataPackage
 */
public class XsODataSwitch<T> extends Switch<T> {

  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  protected static XsODataPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public XsODataSwitch() {
    if (modelPackage == null) {
      modelPackage = XsODataPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage) {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject) {
    switch (classifierID) {
      case XsODataPackage.XSO_DATA: {
        XSOData xsoData = (XSOData) theEObject;
        T result = caseXSOData(xsoData);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case XsODataPackage.TYPE: {
        Type type = (Type) theEObject;
        T result = caseType(type);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case XsODataPackage.SERVICE: {
        Service service = (Service) theEObject;
        T result = caseService(service);
        if (result == null) {
          result = caseType(service);
        }
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case XsODataPackage.ENTITY: {
        Entity entity = (Entity) theEObject;
        T result = caseEntity(entity);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case XsODataPackage.NAVIGATION: {
        Navigation navigation = (Navigation) theEObject;
        T result = caseNavigation(navigation);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      case XsODataPackage.ASSOCIATION: {
        Association association = (Association) theEObject;
        T result = caseAssociation(association);
        if (result == null) {
          result = defaultCase(theEObject);
        }
        return result;
      }
      default:
        return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>XSO Data</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>XSO Data</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseXSOData(XSOData object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Type</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Type</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseType(Type object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Service</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Service</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseService(Service object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Entity</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Entity</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseEntity(Entity object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Navigation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Navigation</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseNavigation(Navigation object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Association</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Association</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   */
  public T caseAssociation(Association object) {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   *
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @generated
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   */
  @Override
  public T defaultCase(EObject object) {
    return null;
  }

} //XsODataSwitch
