/** generated by Xtext 2.18.0 */
package com.sap.xsk.models.xsodata.xsOData.impl;

import com.sap.xsk.models.xsodata.xsOData.Association;
import com.sap.xsk.models.xsodata.xsOData.XsODataPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 *
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Association</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>The following features are implemented:
 *
 * <ul>
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getName <em>Name</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getPrincipal
 *       <em>Principal</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getPrincipalKey
 *       <em>Principal Key</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getPrincipalMultiplicity
 *       <em>Principal Multiplicity</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getDependent
 *       <em>Dependent</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getDependentProperty
 *       <em>Dependent Property</em>}
 *   <li>{@link com.sap.xsk.models.xsodata.xsOData.impl.AssociationImpl#getDependentMultiplicity
 *       <em>Dependent Multiplicity</em>}
 * </ul>
 *
 * @generated
 */
public class AssociationImpl extends MinimalEObjectImpl.Container implements Association {
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getPrincipal() <em>Principal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getPrincipal()
   * @generated
   * @ordered
   */
  protected static final String PRINCIPAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrincipal() <em>Principal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getPrincipal()
   * @generated
   * @ordered
   */
  protected String principal = PRINCIPAL_EDEFAULT;

  /**
   * The default value of the '{@link #getPrincipalKey() <em>Principal Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getPrincipalKey()
   * @generated
   * @ordered
   */
  protected static final String PRINCIPAL_KEY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrincipalKey() <em>Principal Key</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getPrincipalKey()
   * @generated
   * @ordered
   */
  protected String principalKey = PRINCIPAL_KEY_EDEFAULT;

  /**
   * The default value of the '{@link #getPrincipalMultiplicity() <em>Principal Multiplicity</em>}'
   * attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getPrincipalMultiplicity()
   * @generated
   * @ordered
   */
  protected static final String PRINCIPAL_MULTIPLICITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPrincipalMultiplicity() <em>Principal Multiplicity</em>}'
   * attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getPrincipalMultiplicity()
   * @generated
   * @ordered
   */
  protected String principalMultiplicity = PRINCIPAL_MULTIPLICITY_EDEFAULT;

  /**
   * The default value of the '{@link #getDependent() <em>Dependent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getDependent()
   * @generated
   * @ordered
   */
  protected static final String DEPENDENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDependent() <em>Dependent</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getDependent()
   * @generated
   * @ordered
   */
  protected String dependent = DEPENDENT_EDEFAULT;

  /**
   * The default value of the '{@link #getDependentProperty() <em>Dependent Property</em>}'
   * attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getDependentProperty()
   * @generated
   * @ordered
   */
  protected static final String DEPENDENT_PROPERTY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDependentProperty() <em>Dependent Property</em>}'
   * attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getDependentProperty()
   * @generated
   * @ordered
   */
  protected String dependentProperty = DEPENDENT_PROPERTY_EDEFAULT;

  /**
   * The default value of the '{@link #getDependentMultiplicity() <em>Dependent Multiplicity</em>}'
   * attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getDependentMultiplicity()
   * @generated
   * @ordered
   */
  protected static final String DEPENDENT_MULTIPLICITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDependentMultiplicity() <em>Dependent Multiplicity</em>}'
   * attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @see #getDependentMultiplicity()
   * @generated
   * @ordered
   */
  protected String dependentMultiplicity = DEPENDENT_MULTIPLICITY_EDEFAULT;

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  protected AssociationImpl() {
    super();
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  protected EClass eStaticClass() {
    return XsODataPackage.Literals.ASSOCIATION;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getName() {
    return name;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setName(String newName) {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this, Notification.SET, XsODataPackage.ASSOCIATION__NAME, oldName, name));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getPrincipal() {
    return principal;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setPrincipal(String newPrincipal) {
    String oldPrincipal = principal;
    principal = newPrincipal;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this,
              Notification.SET,
              XsODataPackage.ASSOCIATION__PRINCIPAL,
              oldPrincipal,
              principal));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getPrincipalKey() {
    return principalKey;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setPrincipalKey(String newPrincipalKey) {
    String oldPrincipalKey = principalKey;
    principalKey = newPrincipalKey;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this,
              Notification.SET,
              XsODataPackage.ASSOCIATION__PRINCIPAL_KEY,
              oldPrincipalKey,
              principalKey));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getPrincipalMultiplicity() {
    return principalMultiplicity;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setPrincipalMultiplicity(String newPrincipalMultiplicity) {
    String oldPrincipalMultiplicity = principalMultiplicity;
    principalMultiplicity = newPrincipalMultiplicity;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this,
              Notification.SET,
              XsODataPackage.ASSOCIATION__PRINCIPAL_MULTIPLICITY,
              oldPrincipalMultiplicity,
              principalMultiplicity));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getDependent() {
    return dependent;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setDependent(String newDependent) {
    String oldDependent = dependent;
    dependent = newDependent;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this,
              Notification.SET,
              XsODataPackage.ASSOCIATION__DEPENDENT,
              oldDependent,
              dependent));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getDependentProperty() {
    return dependentProperty;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setDependentProperty(String newDependentProperty) {
    String oldDependentProperty = dependentProperty;
    dependentProperty = newDependentProperty;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this,
              Notification.SET,
              XsODataPackage.ASSOCIATION__DEPENDENT_PROPERTY,
              oldDependentProperty,
              dependentProperty));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public String getDependentMultiplicity() {
    return dependentMultiplicity;
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public void setDependentMultiplicity(String newDependentMultiplicity) {
    String oldDependentMultiplicity = dependentMultiplicity;
    dependentMultiplicity = newDependentMultiplicity;
    if (eNotificationRequired())
      eNotify(
          new ENotificationImpl(
              this,
              Notification.SET,
              XsODataPackage.ASSOCIATION__DEPENDENT_MULTIPLICITY,
              oldDependentMultiplicity,
              dependentMultiplicity));
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType) {
    switch (featureID) {
      case XsODataPackage.ASSOCIATION__NAME:
        return getName();
      case XsODataPackage.ASSOCIATION__PRINCIPAL:
        return getPrincipal();
      case XsODataPackage.ASSOCIATION__PRINCIPAL_KEY:
        return getPrincipalKey();
      case XsODataPackage.ASSOCIATION__PRINCIPAL_MULTIPLICITY:
        return getPrincipalMultiplicity();
      case XsODataPackage.ASSOCIATION__DEPENDENT:
        return getDependent();
      case XsODataPackage.ASSOCIATION__DEPENDENT_PROPERTY:
        return getDependentProperty();
      case XsODataPackage.ASSOCIATION__DEPENDENT_MULTIPLICITY:
        return getDependentMultiplicity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue) {
    switch (featureID) {
      case XsODataPackage.ASSOCIATION__NAME:
        setName((String) newValue);
        return;
      case XsODataPackage.ASSOCIATION__PRINCIPAL:
        setPrincipal((String) newValue);
        return;
      case XsODataPackage.ASSOCIATION__PRINCIPAL_KEY:
        setPrincipalKey((String) newValue);
        return;
      case XsODataPackage.ASSOCIATION__PRINCIPAL_MULTIPLICITY:
        setPrincipalMultiplicity((String) newValue);
        return;
      case XsODataPackage.ASSOCIATION__DEPENDENT:
        setDependent((String) newValue);
        return;
      case XsODataPackage.ASSOCIATION__DEPENDENT_PROPERTY:
        setDependentProperty((String) newValue);
        return;
      case XsODataPackage.ASSOCIATION__DEPENDENT_MULTIPLICITY:
        setDependentMultiplicity((String) newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public void eUnset(int featureID) {
    switch (featureID) {
      case XsODataPackage.ASSOCIATION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case XsODataPackage.ASSOCIATION__PRINCIPAL:
        setPrincipal(PRINCIPAL_EDEFAULT);
        return;
      case XsODataPackage.ASSOCIATION__PRINCIPAL_KEY:
        setPrincipalKey(PRINCIPAL_KEY_EDEFAULT);
        return;
      case XsODataPackage.ASSOCIATION__PRINCIPAL_MULTIPLICITY:
        setPrincipalMultiplicity(PRINCIPAL_MULTIPLICITY_EDEFAULT);
        return;
      case XsODataPackage.ASSOCIATION__DEPENDENT:
        setDependent(DEPENDENT_EDEFAULT);
        return;
      case XsODataPackage.ASSOCIATION__DEPENDENT_PROPERTY:
        setDependentProperty(DEPENDENT_PROPERTY_EDEFAULT);
        return;
      case XsODataPackage.ASSOCIATION__DEPENDENT_MULTIPLICITY:
        setDependentMultiplicity(DEPENDENT_MULTIPLICITY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID) {
    switch (featureID) {
      case XsODataPackage.ASSOCIATION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case XsODataPackage.ASSOCIATION__PRINCIPAL:
        return PRINCIPAL_EDEFAULT == null
            ? principal != null
            : !PRINCIPAL_EDEFAULT.equals(principal);
      case XsODataPackage.ASSOCIATION__PRINCIPAL_KEY:
        return PRINCIPAL_KEY_EDEFAULT == null
            ? principalKey != null
            : !PRINCIPAL_KEY_EDEFAULT.equals(principalKey);
      case XsODataPackage.ASSOCIATION__PRINCIPAL_MULTIPLICITY:
        return PRINCIPAL_MULTIPLICITY_EDEFAULT == null
            ? principalMultiplicity != null
            : !PRINCIPAL_MULTIPLICITY_EDEFAULT.equals(principalMultiplicity);
      case XsODataPackage.ASSOCIATION__DEPENDENT:
        return DEPENDENT_EDEFAULT == null
            ? dependent != null
            : !DEPENDENT_EDEFAULT.equals(dependent);
      case XsODataPackage.ASSOCIATION__DEPENDENT_PROPERTY:
        return DEPENDENT_PROPERTY_EDEFAULT == null
            ? dependentProperty != null
            : !DEPENDENT_PROPERTY_EDEFAULT.equals(dependentProperty);
      case XsODataPackage.ASSOCIATION__DEPENDENT_MULTIPLICITY:
        return DEPENDENT_MULTIPLICITY_EDEFAULT == null
            ? dependentMultiplicity != null
            : !DEPENDENT_MULTIPLICITY_EDEFAULT.equals(dependentMultiplicity);
    }
    return super.eIsSet(featureID);
  }

  /**
   *
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  @Override
  public String toString() {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", principal: ");
    result.append(principal);
    result.append(", principalKey: ");
    result.append(principalKey);
    result.append(", principalMultiplicity: ");
    result.append(principalMultiplicity);
    result.append(", dependent: ");
    result.append(dependent);
    result.append(", dependentProperty: ");
    result.append(dependentProperty);
    result.append(", dependentMultiplicity: ");
    result.append(dependentMultiplicity);
    result.append(')');
    return result.toString();
  }
} // AssociationImpl
