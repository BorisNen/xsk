/**
 * generated by Xtext 2.18.0
 */
package com.sap.xsk.models.xsodata.xsOData.util;

import com.sap.xsk.models.xsodata.xsOData.Association;
import com.sap.xsk.models.xsodata.xsOData.Entity;
import com.sap.xsk.models.xsodata.xsOData.Navigation;
import com.sap.xsk.models.xsodata.xsOData.Service;
import com.sap.xsk.models.xsodata.xsOData.Type;
import com.sap.xsk.models.xsodata.xsOData.XSOData;
import com.sap.xsk.models.xsodata.xsOData.XsODataPackage;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.notify.impl.AdapterFactoryImpl;
import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * The <b>Adapter Factory</b> for the model.
 * It provides an adapter <code>createXXX</code> method for each class of the model.
 * <!-- end-user-doc -->
 *
 * @generated
 * @see com.sap.xsk.models.xsodata.xsOData.XsODataPackage
 */
public class XsODataAdapterFactory extends AdapterFactoryImpl {

  /**
   * The cached model package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  protected static XsODataPackage modelPackage;
  /**
   * The switch that delegates to the <code>createXXX</code> methods.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  protected XsODataSwitch<Adapter> modelSwitch =
      new XsODataSwitch<Adapter>() {
        @Override
        public Adapter caseXSOData(XSOData object) {
          return createXSODataAdapter();
        }

        @Override
        public Adapter caseType(Type object) {
          return createTypeAdapter();
        }

        @Override
        public Adapter caseService(Service object) {
          return createServiceAdapter();
        }

        @Override
        public Adapter caseEntity(Entity object) {
          return createEntityAdapter();
        }

        @Override
        public Adapter caseNavigation(Navigation object) {
          return createNavigationAdapter();
        }

        @Override
        public Adapter caseAssociation(Association object) {
          return createAssociationAdapter();
        }

        @Override
        public Adapter defaultCase(EObject object) {
          return createEObjectAdapter();
        }
      };

  /**
   * Creates an instance of the adapter factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @generated
   */
  public XsODataAdapterFactory() {
    if (modelPackage == null) {
      modelPackage = XsODataPackage.eINSTANCE;
    }
  }

  /**
   * Returns whether this factory is applicable for the type of the object.
   * <!-- begin-user-doc -->
   * This implementation returns <code>true</code> if the object is either the model's package or is an instance object of the model.
   * <!-- end-user-doc -->
   *
   * @return whether this factory is applicable for the type of the object.
   * @generated
   */
  @Override
  public boolean isFactoryForType(Object object) {
    if (object == modelPackage) {
      return true;
    }
    if (object instanceof EObject) {
      return ((EObject) object).eClass().getEPackage() == modelPackage;
    }
    return false;
  }

  /**
   * Creates an adapter for the <code>target</code>.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   *
   * @param target the object to adapt.
   * @return the adapter for the <code>target</code>.
   * @generated
   */
  @Override
  public Adapter createAdapter(Notifier target) {
    return modelSwitch.doSwitch((EObject) target);
  }


  /**
   * Creates a new adapter for an object of class '{@link com.sap.xsk.models.xsodata.xsOData.XSOData <em>XSO Data</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   * @see com.sap.xsk.models.xsodata.xsOData.XSOData
   */
  public Adapter createXSODataAdapter() {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sap.xsk.models.xsodata.xsOData.Type <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   * @see com.sap.xsk.models.xsodata.xsOData.Type
   */
  public Adapter createTypeAdapter() {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sap.xsk.models.xsodata.xsOData.Service <em>Service</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   * @see com.sap.xsk.models.xsodata.xsOData.Service
   */
  public Adapter createServiceAdapter() {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sap.xsk.models.xsodata.xsOData.Entity <em>Entity</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   * @see com.sap.xsk.models.xsodata.xsOData.Entity
   */
  public Adapter createEntityAdapter() {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sap.xsk.models.xsodata.xsOData.Navigation <em>Navigation</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   * @see com.sap.xsk.models.xsodata.xsOData.Navigation
   */
  public Adapter createNavigationAdapter() {
    return null;
  }

  /**
   * Creates a new adapter for an object of class '{@link com.sap.xsk.models.xsodata.xsOData.Association <em>Association</em>}'.
   * <!-- begin-user-doc -->
   * This default implementation returns null so that we can easily ignore cases;
   * it's useful to ignore a case when inheritance will catch all the cases anyway.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   * @see com.sap.xsk.models.xsodata.xsOData.Association
   */
  public Adapter createAssociationAdapter() {
    return null;
  }

  /**
   * Creates a new adapter for the default case.
   * <!-- begin-user-doc -->
   * This default implementation returns null.
   * <!-- end-user-doc -->
   *
   * @return the new adapter.
   * @generated
   */
  public Adapter createEObjectAdapter() {
    return null;
  }

} //XsODataAdapterFactory
