/*
 * generated by Xtext 2.18.0
 */
grammar InternalHdbTable;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package com.sap.xsk.models.hdbtable.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.sap.xsk.models.hdbtable.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.sap.xsk.models.hdbtable.services.HdbTableGrammarAccess;

}

@parser::members {

 	private HdbTableGrammarAccess grammarAccess;

    public InternalHdbTableParser(TokenStream input, HdbTableGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "HdbTableModel";
   	}

   	@Override
   	protected HdbTableGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleHdbTableModel
entryRuleHdbTableModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getHdbTableModelRule()); }
	iv_ruleHdbTableModel=ruleHdbTableModel
	{ $current=$iv_ruleHdbTableModel.current; }
	EOF;

// Rule HdbTableModel
ruleHdbTableModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getHdbTableModelAccess().getTableElementTableParserRuleCall_0());
			}
			lv_tableElement_0_0=ruleTable
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getHdbTableModelRule());
				}
				set(
					$current,
					"tableElement",
					lv_tableElement_0_0,
					"com.sap.xsk.models.hdbtable.HdbTable.Table");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleColumnType
entryRuleColumnType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnTypeRule()); }
	iv_ruleColumnType=ruleColumnType
	{ $current=$iv_ruleColumnType.current; }
	EOF;

// Rule ColumnType
ruleColumnType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getColumnTypeAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 0);
				}
							({true}?=>(otherlv_1='{'
							{
								newLeafNode(otherlv_1, grammarAccess.getColumnTypeAccess().getLeftCurlyBracketKeyword_0_0());
							}
							otherlv_2='name'
							{
								newLeafNode(otherlv_2, grammarAccess.getColumnTypeAccess().getNameKeyword_0_1());
							}
							otherlv_3='='
							{
								newLeafNode(otherlv_3, grammarAccess.getColumnTypeAccess().getEqualsSignKeyword_0_2());
							}
							(
								(
									lv_columnName_4_0=RULE_STRING
									{
										newLeafNode(lv_columnName_4_0, grammarAccess.getColumnTypeAccess().getColumnNameSTRINGTerminalRuleCall_0_3_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getColumnTypeRule());
										}
										setWithLastConsumed(
											$current,
											"columnName",
											lv_columnName_4_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)
							otherlv_5=';'
							{
								newLeafNode(otherlv_5, grammarAccess.getColumnTypeAccess().getSemicolonKeyword_0_4());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColumnTypeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 1);
				}
							({true}?=>(otherlv_6='sqlType'
							{
								newLeafNode(otherlv_6, grammarAccess.getColumnTypeAccess().getSqlTypeKeyword_1_0());
							}
							otherlv_7='='
							{
								newLeafNode(otherlv_7, grammarAccess.getColumnTypeAccess().getEqualsSignKeyword_1_1());
							}
							(
								(
									lv_columnSqlType_8_0=RULE_ID
									{
										newLeafNode(lv_columnSqlType_8_0, grammarAccess.getColumnTypeAccess().getColumnSqlTypeIDTerminalRuleCall_1_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getColumnTypeRule());
										}
										setWithLastConsumed(
											$current,
											"columnSqlType",
											lv_columnSqlType_8_0,
											"org.eclipse.xtext.common.Terminals.ID");
									}
								)
							)
							otherlv_9=';'
							{
								newLeafNode(otherlv_9, grammarAccess.getColumnTypeAccess().getSemicolonKeyword_1_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColumnTypeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 2);
				}
							({true}?=>(otherlv_10='length'
							{
								newLeafNode(otherlv_10, grammarAccess.getColumnTypeAccess().getLengthKeyword_2_0());
							}
							otherlv_11='='
							{
								newLeafNode(otherlv_11, grammarAccess.getColumnTypeAccess().getEqualsSignKeyword_2_1());
							}
							(
								(
									lv_columnLength_12_0=RULE_INT
									{
										newLeafNode(lv_columnLength_12_0, grammarAccess.getColumnTypeAccess().getColumnLengthINTTerminalRuleCall_2_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getColumnTypeRule());
										}
										setWithLastConsumed(
											$current,
											"columnLength",
											lv_columnLength_12_0,
											"org.eclipse.xtext.common.Terminals.INT");
									}
								)
							)
							otherlv_13=';'
							{
								newLeafNode(otherlv_13, grammarAccess.getColumnTypeAccess().getSemicolonKeyword_2_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColumnTypeAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getColumnTypeAccess().getUnorderedGroup(), 3);
				}
							({true}?=>((
								otherlv_14='nullable'
								{
									newLeafNode(otherlv_14, grammarAccess.getColumnTypeAccess().getNullableKeyword_3_0_0());
								}
								otherlv_15='='
								{
									newLeafNode(otherlv_15, grammarAccess.getColumnTypeAccess().getEqualsSignKeyword_3_0_1());
								}
								(
									(
										lv_columnNullable_16_0=RULE_BOOL
										{
											newLeafNode(lv_columnNullable_16_0, grammarAccess.getColumnTypeAccess().getColumnNullableBOOLTerminalRuleCall_3_0_2_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getColumnTypeRule());
											}
											setWithLastConsumed(
												$current,
												"columnNullable",
												lv_columnNullable_16_0,
												"com.sap.xsk.models.hdbtable.HdbTable.BOOL");
										}
									)
								)
							)?
							otherlv_17=';'
							{
								newLeafNode(otherlv_17, grammarAccess.getColumnTypeAccess().getSemicolonKeyword_3_1());
							}
							otherlv_18='}'
							{
								newLeafNode(otherlv_18, grammarAccess.getColumnTypeAccess().getRightCurlyBracketKeyword_3_2());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getColumnTypeAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getColumnTypeAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getColumnTypeAccess().getUnorderedGroup());
			}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{ 
			  getUnorderedGroupHelper().enter(grammarAccess.getTableAccess().getUnorderedGroup());
			}
			(
				(
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTableAccess().getUnorderedGroup(), 0)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTableAccess().getUnorderedGroup(), 0);
				}
							({true}?=>((
								(
									lv_schema_1_0='table.schemaName'
									{
										newLeafNode(lv_schema_1_0, grammarAccess.getTableAccess().getSchemaTableSchemaNameKeyword_0_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed($current, "schema", true, "table.schemaName");
									}
								)
							)
							otherlv_2='='
							{
								newLeafNode(otherlv_2, grammarAccess.getTableAccess().getEqualsSignKeyword_0_1());
							}
							(
								(
									lv_schemaName_3_0=RULE_STRING
									{
										newLeafNode(lv_schemaName_3_0, grammarAccess.getTableAccess().getSchemaNameSTRINGTerminalRuleCall_0_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed(
											$current,
											"schemaName",
											lv_schemaName_3_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)
							otherlv_4=';'
							{
								newLeafNode(otherlv_4, grammarAccess.getTableAccess().getSemicolonKeyword_0_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTableAccess().getUnorderedGroup(), 1)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTableAccess().getUnorderedGroup(), 1);
				}
							({true}?=>((
								(
									lv_type_5_0='table.tableType'
									{
										newLeafNode(lv_type_5_0, grammarAccess.getTableAccess().getTypeTableTableTypeKeyword_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed($current, "type", true, "table.tableType");
									}
								)
							)
							otherlv_6='='
							{
								newLeafNode(otherlv_6, grammarAccess.getTableAccess().getEqualsSignKeyword_1_1());
							}
							(
								(
									lv_typeValue_7_0=RULE_ID
									{
										newLeafNode(lv_typeValue_7_0, grammarAccess.getTableAccess().getTypeValueIDTerminalRuleCall_1_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed(
											$current,
											"typeValue",
											lv_typeValue_7_0,
											"org.eclipse.xtext.common.Terminals.ID");
									}
								)
							)
							otherlv_8=';'
							{
								newLeafNode(otherlv_8, grammarAccess.getTableAccess().getSemicolonKeyword_1_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTableAccess().getUnorderedGroup(), 2)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTableAccess().getUnorderedGroup(), 2);
				}
							({true}?=>((
								(
									lv_description_9_0='table.description'
									{
										newLeafNode(lv_description_9_0, grammarAccess.getTableAccess().getDescriptionTableDescriptionKeyword_2_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed($current, "description", true, "table.description");
									}
								)
							)
							otherlv_10='='
							{
								newLeafNode(otherlv_10, grammarAccess.getTableAccess().getEqualsSignKeyword_2_1());
							}
							(
								(
									lv_descriptionText_11_0=RULE_STRING
									{
										newLeafNode(lv_descriptionText_11_0, grammarAccess.getTableAccess().getDescriptionTextSTRINGTerminalRuleCall_2_2_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed(
											$current,
											"descriptionText",
											lv_descriptionText_11_0,
											"org.eclipse.xtext.common.Terminals.STRING");
									}
								)
							)
							otherlv_12=';'
							{
								newLeafNode(otherlv_12, grammarAccess.getTableAccess().getSemicolonKeyword_2_3());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTableAccess().getUnorderedGroup(), 3)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTableAccess().getUnorderedGroup(), 3);
				}
							({true}?=>((
								(
									lv_columns_13_0='table.columns'
									{
										newLeafNode(lv_columns_13_0, grammarAccess.getTableAccess().getColumnsTableColumnsKeyword_3_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed($current, "columns", true, "table.columns");
									}
								)
							)
							otherlv_14='='
							{
								newLeafNode(otherlv_14, grammarAccess.getTableAccess().getEqualsSignKeyword_3_1());
							}
							otherlv_15='['
							{
								newLeafNode(otherlv_15, grammarAccess.getTableAccess().getLeftSquareBracketKeyword_3_2());
							}
							(
								(
									(
										{
											newCompositeNode(grammarAccess.getTableAccess().getColumnsValuesColumnTypeParserRuleCall_3_3_0_0());
										}
										lv_columnsValues_16_0=ruleColumnType
										{
											if ($current==null) {
												$current = createModelElementForParent(grammarAccess.getTableRule());
											}
											add(
												$current,
												"columnsValues",
												lv_columnsValues_16_0,
												"com.sap.xsk.models.hdbtable.HdbTable.ColumnType");
											afterParserOrEnumRuleCall();
										}
									)
								)
								(
									otherlv_17=','
									{
										newLeafNode(otherlv_17, grammarAccess.getTableAccess().getCommaKeyword_3_3_1_0());
									}
									(
										(
											{
												newCompositeNode(grammarAccess.getTableAccess().getColumnsValuesColumnTypeParserRuleCall_3_3_1_1_0());
											}
											lv_columnsValues_18_0=ruleColumnType
											{
												if ($current==null) {
													$current = createModelElementForParent(grammarAccess.getTableRule());
												}
												add(
													$current,
													"columnsValues",
													lv_columnsValues_18_0,
													"com.sap.xsk.models.hdbtable.HdbTable.ColumnType");
												afterParserOrEnumRuleCall();
											}
										)
									)
								)*
							)?
							otherlv_19=']'
							{
								newLeafNode(otherlv_19, grammarAccess.getTableAccess().getRightSquareBracketKeyword_3_4());
							}
							otherlv_20=';'
							{
								newLeafNode(otherlv_20, grammarAccess.getTableAccess().getSemicolonKeyword_3_5());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableAccess().getUnorderedGroup());
				}
			)
		)|
		(
			{getUnorderedGroupHelper().canSelect(grammarAccess.getTableAccess().getUnorderedGroup(), 4)}?=>(
				{
					getUnorderedGroupHelper().select(grammarAccess.getTableAccess().getUnorderedGroup(), 4);
				}
							({true}?=>((
								(
									lv_primaryKeyColumns_21_0='table.primaryKey.pkcolumns'
									{
										newLeafNode(lv_primaryKeyColumns_21_0, grammarAccess.getTableAccess().getPrimaryKeyColumnsTablePrimaryKeyPkcolumnsKeyword_4_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getTableRule());
										}
										setWithLastConsumed($current, "primaryKeyColumns", true, "table.primaryKey.pkcolumns");
									}
								)
							)
							otherlv_22='='
							{
								newLeafNode(otherlv_22, grammarAccess.getTableAccess().getEqualsSignKeyword_4_1());
							}
							otherlv_23='['
							{
								newLeafNode(otherlv_23, grammarAccess.getTableAccess().getLeftSquareBracketKeyword_4_2());
							}
							(
								(
									(
										lv_tablePrimaryKeyColumnsValues_24_0=RULE_STRING
										{
											newLeafNode(lv_tablePrimaryKeyColumnsValues_24_0, grammarAccess.getTableAccess().getTablePrimaryKeyColumnsValuesSTRINGTerminalRuleCall_4_3_0_0());
										}
										{
											if ($current==null) {
												$current = createModelElement(grammarAccess.getTableRule());
											}
											addWithLastConsumed(
												$current,
												"tablePrimaryKeyColumnsValues",
												lv_tablePrimaryKeyColumnsValues_24_0,
												"org.eclipse.xtext.common.Terminals.STRING");
										}
									)
								)
								(
									otherlv_25=','
									{
										newLeafNode(otherlv_25, grammarAccess.getTableAccess().getCommaKeyword_4_3_1_0());
									}
									(
										(
											lv_tablePrimaryKeyColumnsValues_26_0=RULE_STRING
											{
												newLeafNode(lv_tablePrimaryKeyColumnsValues_26_0, grammarAccess.getTableAccess().getTablePrimaryKeyColumnsValuesSTRINGTerminalRuleCall_4_3_1_1_0());
											}
											{
												if ($current==null) {
													$current = createModelElement(grammarAccess.getTableRule());
												}
												addWithLastConsumed(
													$current,
													"tablePrimaryKeyColumnsValues",
													lv_tablePrimaryKeyColumnsValues_26_0,
													"org.eclipse.xtext.common.Terminals.STRING");
											}
										)
									)
								)*
							)?
							otherlv_27=']'
							{
								newLeafNode(otherlv_27, grammarAccess.getTableAccess().getRightSquareBracketKeyword_4_4());
							}
							otherlv_28=';'
							{
								newLeafNode(otherlv_28, grammarAccess.getTableAccess().getSemicolonKeyword_4_5());
							}
							))
				{ 
					getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTableAccess().getUnorderedGroup());
				}
			)
		)
				)+
				{getUnorderedGroupHelper().canLeave(grammarAccess.getTableAccess().getUnorderedGroup())}?
			)
		)
			{ 
			  getUnorderedGroupHelper().leave(grammarAccess.getTableAccess().getUnorderedGroup());
			}
	)
;

RULE_BOOL : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
