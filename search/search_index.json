{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Project XSK Project XSK is a compatible environment for SAP HANA Extended Application Services (XS) based applications. It is deployed outside of SAP HANA instance as a Docker a container on Kubernetes . Hence, some of the features can work against any other JDBC compliant RDBMS such as PostgreSQL . The compatibility stack is an extension of the Eclipse Dirigible cloud development platform.","title":"Welcome"},{"location":"#project-xsk","text":"Project XSK is a compatible environment for SAP HANA Extended Application Services (XS) based applications. It is deployed outside of SAP HANA instance as a Docker a container on Kubernetes . Hence, some of the features can work against any other JDBC compliant RDBMS such as PostgreSQL . The compatibility stack is an extension of the Eclipse Dirigible cloud development platform.","title":"Project XSK"},{"location":"setup/cloud-foundry/","text":"Setup in Cloud Foundry Deploy XSK in SAP BTP 1 , Cloud Foundry environment. Prerequisites Install Cloud Foundry Command Line Interface . Access to SAP BTP account (the Trial landscape can be accessed here ). Create HANA Cloud service instance in SAP BTP Cloud Foundry space. Create a separate HANA Cloud user that will be used from the XSK engine. Steps Set the SAP BTP Cloud Foundry API host: cf api <cloud-foundry-api-host> Log in to the SAP BTP, Cloud Foundry environment with: cf login Create XSUAA service instance: Copy and paste the following content into xs-security.json : { \"xsappname\" : \"<applicationName>-xsuaa\" , \"tenant-mode\" : \"shared\" , \"scopes\" : [ { \"name\" : \"$XSAPPNAME.Developer\" , \"description\" : \"Developer scope\" }, { \"name\" : \"$XSAPPNAME.Operator\" , \"description\" : \"Operator scope\" } ], \"role-templates\" : [ { \"name\" : \"Developer\" , \"description\" : \"Developer related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"Operator\" , \"description\" : \"Operator related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Operator\" ] } ], \"role-collections\" : [ { \"name\" : \"XSK Developer\" , \"description\" : \"XSK Developer\" , \"role-template-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"XSK Operator\" , \"description\" : \"XSK Operator\" , \"role-template-references\" : [ \"$XSAPPNAME.Operator\" ] } ] } Note Replace the <applicationName> placeholder with your application name, e.g. xsk . Create a XSUAA service instance: cf create-service xsuaa application <applicationName>-xsuaa -c xs-security.json Note Use the same <applicationName> as in the previous step. Deploy XSK: Docker cf push xsk \\ --docker-image=dirigiblelabs/xsk-cf:latest \\ --hostname xsk-<org-name> \\ -m 2G -k 2G Note Replace the <org-name> placeholder with your subaccount's Subdomain value. XSK versions Instead of using the latest tag (version), for production and development use cases it is recomended to use a stable release version: All released versions can be found here . All XSK Docker images and tags (versions) can be found here . Bind the XSUAA and HANA Cloud service instances to the XSK deployment: cf bind-service xsk <applicationName>-xsuaa cf bind-service xsk <hanaCloudInstanceName> cf set-env xsk HANA_USERNAME <hanaCloudUsername> cf set-env xsk HANA_PASSWORD <hanaCloudPassword> Note Replace the <applicationName> placeholder with the application name used in the previous steps. Replace the <hanaCloudInstanceName> placeholder with the HANA Cloud service instance name that will be used. Replace the <hanaUsername> placeholder with the HANA Cloud username that will be used. Replace the <hanaPassword> placeholder with the HANA Cloud password that will be used. Restart the xsk deployment: cf restart xsk Buildpack Download the sap-cf binaries from the downloads site: https://github.com/SAP/xsk/releases Unzip the downloaded archieve to extract the ROOT.war file. Create manifest.yaml file in the same directory where the ROOT.war is located: applications : - name : xsk host : xsk-<org-name> memory : 2G buildpack : sap_java_buildpack path : ROOT.war env : JBP_CONFIG_COMPONENTS : \"jres: ['com.sap.xs.java.buildpack.jdk.SAPMachineJDK']\" JBP_CONFIG_SAP_MACHINE_JRE : 'jre: { version: 11.+ }' HANA_USERNAME : <hanaUsername> HANA_PASSWORD : <hanaPassword> services : - <applicationName>-xsuaa - <hanaCloudInstanceName> Note Replace the <org-name> placeholder with your subaccount's Subdomain value. Replace the <applicationName> placeholder with the application name used in the previous steps. Replace the <hanaUsername> placeholder with the HANA Cloud username that will be used. Replace the <hanaPassword> placeholder with the HANA Cloud password that will be used. Replace the <hanaCloudInstanceName> placeholder with the HANA Cloud service instance name that will be used. Deploy with: cf push Assign the Developer and Operator roles. Log in. Additional Materials Step-by-step tutorial can be found here . SAP Cloud Platform is called SAP Business Technology Platform (SAP BTP) as of 2021. \u21a9","title":"Cloud Foundry"},{"location":"setup/cloud-foundry/#setup-in-cloud-foundry","text":"Deploy XSK in SAP BTP 1 , Cloud Foundry environment. Prerequisites Install Cloud Foundry Command Line Interface . Access to SAP BTP account (the Trial landscape can be accessed here ). Create HANA Cloud service instance in SAP BTP Cloud Foundry space. Create a separate HANA Cloud user that will be used from the XSK engine.","title":"Setup in Cloud Foundry"},{"location":"setup/cloud-foundry/#steps","text":"Set the SAP BTP Cloud Foundry API host: cf api <cloud-foundry-api-host> Log in to the SAP BTP, Cloud Foundry environment with: cf login Create XSUAA service instance: Copy and paste the following content into xs-security.json : { \"xsappname\" : \"<applicationName>-xsuaa\" , \"tenant-mode\" : \"shared\" , \"scopes\" : [ { \"name\" : \"$XSAPPNAME.Developer\" , \"description\" : \"Developer scope\" }, { \"name\" : \"$XSAPPNAME.Operator\" , \"description\" : \"Operator scope\" } ], \"role-templates\" : [ { \"name\" : \"Developer\" , \"description\" : \"Developer related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"Operator\" , \"description\" : \"Operator related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Operator\" ] } ], \"role-collections\" : [ { \"name\" : \"XSK Developer\" , \"description\" : \"XSK Developer\" , \"role-template-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"XSK Operator\" , \"description\" : \"XSK Operator\" , \"role-template-references\" : [ \"$XSAPPNAME.Operator\" ] } ] } Note Replace the <applicationName> placeholder with your application name, e.g. xsk . Create a XSUAA service instance: cf create-service xsuaa application <applicationName>-xsuaa -c xs-security.json Note Use the same <applicationName> as in the previous step. Deploy XSK: Docker cf push xsk \\ --docker-image=dirigiblelabs/xsk-cf:latest \\ --hostname xsk-<org-name> \\ -m 2G -k 2G Note Replace the <org-name> placeholder with your subaccount's Subdomain value. XSK versions Instead of using the latest tag (version), for production and development use cases it is recomended to use a stable release version: All released versions can be found here . All XSK Docker images and tags (versions) can be found here . Bind the XSUAA and HANA Cloud service instances to the XSK deployment: cf bind-service xsk <applicationName>-xsuaa cf bind-service xsk <hanaCloudInstanceName> cf set-env xsk HANA_USERNAME <hanaCloudUsername> cf set-env xsk HANA_PASSWORD <hanaCloudPassword> Note Replace the <applicationName> placeholder with the application name used in the previous steps. Replace the <hanaCloudInstanceName> placeholder with the HANA Cloud service instance name that will be used. Replace the <hanaUsername> placeholder with the HANA Cloud username that will be used. Replace the <hanaPassword> placeholder with the HANA Cloud password that will be used. Restart the xsk deployment: cf restart xsk Buildpack Download the sap-cf binaries from the downloads site: https://github.com/SAP/xsk/releases Unzip the downloaded archieve to extract the ROOT.war file. Create manifest.yaml file in the same directory where the ROOT.war is located: applications : - name : xsk host : xsk-<org-name> memory : 2G buildpack : sap_java_buildpack path : ROOT.war env : JBP_CONFIG_COMPONENTS : \"jres: ['com.sap.xs.java.buildpack.jdk.SAPMachineJDK']\" JBP_CONFIG_SAP_MACHINE_JRE : 'jre: { version: 11.+ }' HANA_USERNAME : <hanaUsername> HANA_PASSWORD : <hanaPassword> services : - <applicationName>-xsuaa - <hanaCloudInstanceName> Note Replace the <org-name> placeholder with your subaccount's Subdomain value. Replace the <applicationName> placeholder with the application name used in the previous steps. Replace the <hanaUsername> placeholder with the HANA Cloud username that will be used. Replace the <hanaPassword> placeholder with the HANA Cloud password that will be used. Replace the <hanaCloudInstanceName> placeholder with the HANA Cloud service instance name that will be used. Deploy with: cf push Assign the Developer and Operator roles. Log in. Additional Materials Step-by-step tutorial can be found here . SAP Cloud Platform is called SAP Business Technology Platform (SAP BTP) as of 2021. \u21a9","title":"Steps"},{"location":"setup/kyma/","text":"Setup in Kyma Deploy XSK in SAP BTP 1 , Kyma environment. Prerequisites Install kubectl - this step is optional. Access to SAP BTP account (the Trial landscape can be accessed here ). Warning At the time of writing the setup manual (19.08.2021) , creation of HANA Cloud service instance in the SAP BTP Kyma environment was not possible, thus the setup is suitable only for test & demo purposes. Workaround solution could be found here . Steps Access the SAP BTP, Kyma environment via the SAP BTP cockpit: Deploy XSK: Copy and paste the following content into deployment.yaml : apiVersion : apps/v1 kind : Deployment metadata : name : xsk namespace : default spec : replicas : 1 selector : matchLabels : app : xsk template : metadata : labels : app : xsk spec : containers : - name : xsk image : dirigiblelabs/xsk-kyma:latest imagePullPolicy : Always env : - name : DIRIGIBLE_THEME_DEFAULT value : fiori - name : DIRIGIBLE_HOST value : https://xsk.<your-kyma-cluster-host> volumeMounts : - name : dirigible-volume mountPath : /usr/local/tomcat/target/dirigible/repository ports : - containerPort : 8080 name : dirigible protocol : TCP volumes : - name : xsk-volume persistentVolumeClaim : claimName : xsk-claim --- apiVersion : v1 kind : Service metadata : labels : app : xsk name : xsk namespace : default spec : ports : - name : xsk port : 8080 protocol : TCP targetPort : 8080 selector : app : xsk type : ClusterIP --- apiVersion : v1 kind : PersistentVolumeClaim metadata : name : xsk-claim spec : accessModes : - ReadWriteOnce resources : requests : storage : 1Gi --- apiVersion : gateway.kyma-project.io/v1alpha1 kind : APIRule metadata : name : xsk namespace : default spec : gateway : kyma-gateway.kyma-system.svc.cluster.local rules : - accessStrategies : - config : {} handler : noop methods : - GET - POST - PUT - PATCH - DELETE - HEAD path : /.* service : host : xsk.<your-kyma-cluster-host> name : xsk port : 8080 Note Replace the <your-kyma-cluster-host> placeholder with your Kyma cluster host (e.g. c-xxxxxxx.kyma.xxx.xxx.xxx.ondemand.com )._ XSK versions Instead of using the latest tag (version), for production and development use cases it is recomended to use stable release version: All released versions can be found here . All XSK Docker images and tags (versions) can be found here . Navigate to your Kyma dashboard and select the default namespace. Click on the Deploy new resource button and select the deployment.yaml file. Note Alternatively the kubectl -f deployment.yaml could be used to deploy the resources. Create XSUAA service instance: From the Kyma dashboard, go to Service Management \u2192 Catalog . Find the Authorization & Trust Management service. Create new service instance. Provide the following additional parameters. { \"xsappname\" : \"dirigible-xsuaa\" , \"oauth2-configuration\" : { \"token-validity\" : 7200 , \"redirect-uris\" : [ \"https://dirigible.<your-kyma-cluster-host>\" ] }, \"scopes\" : [ { \"name\" : \"$XSAPPNAME.Developer\" , \"description\" : \"Developer scope\" }, { \"name\" : \"$XSAPPNAME.Operator\" , \"description\" : \"Operator scope\" } ], \"role-templates\" : [ { \"name\" : \"Developer\" , \"description\" : \"Developer related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"Operator\" , \"description\" : \"Operator related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Operator\" ] } ], \"role-collections\" : [ { \"name\" : \"XSK Developer\" , \"description\" : \"XSK Developer\" , \"role-template-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"XSK Operator\" , \"description\" : \"XSK Operator\" , \"role-template-references\" : [ \"$XSAPPNAME.Operator\" ] } ] } Note Replace the <your-kyma-cluster-host> placeholder with your Kyma cluster host (e.g. c-xxxxxxx.kyma.xxx.xxx.xxx.ondemand.com ). Bind the servce instance to the xsk application. Assign the Developer and Operator roles. Log in. Additional Materials Step by step tutorial can be found here . SAP Cloud Platform is called SAP Business Technology Platform (SAP BTP) as of 2021. \u21a9","title":"Kyma"},{"location":"setup/kyma/#setup-in-kyma","text":"Deploy XSK in SAP BTP 1 , Kyma environment. Prerequisites Install kubectl - this step is optional. Access to SAP BTP account (the Trial landscape can be accessed here ). Warning At the time of writing the setup manual (19.08.2021) , creation of HANA Cloud service instance in the SAP BTP Kyma environment was not possible, thus the setup is suitable only for test & demo purposes. Workaround solution could be found here .","title":"Setup in Kyma"},{"location":"setup/kyma/#steps","text":"Access the SAP BTP, Kyma environment via the SAP BTP cockpit: Deploy XSK: Copy and paste the following content into deployment.yaml : apiVersion : apps/v1 kind : Deployment metadata : name : xsk namespace : default spec : replicas : 1 selector : matchLabels : app : xsk template : metadata : labels : app : xsk spec : containers : - name : xsk image : dirigiblelabs/xsk-kyma:latest imagePullPolicy : Always env : - name : DIRIGIBLE_THEME_DEFAULT value : fiori - name : DIRIGIBLE_HOST value : https://xsk.<your-kyma-cluster-host> volumeMounts : - name : dirigible-volume mountPath : /usr/local/tomcat/target/dirigible/repository ports : - containerPort : 8080 name : dirigible protocol : TCP volumes : - name : xsk-volume persistentVolumeClaim : claimName : xsk-claim --- apiVersion : v1 kind : Service metadata : labels : app : xsk name : xsk namespace : default spec : ports : - name : xsk port : 8080 protocol : TCP targetPort : 8080 selector : app : xsk type : ClusterIP --- apiVersion : v1 kind : PersistentVolumeClaim metadata : name : xsk-claim spec : accessModes : - ReadWriteOnce resources : requests : storage : 1Gi --- apiVersion : gateway.kyma-project.io/v1alpha1 kind : APIRule metadata : name : xsk namespace : default spec : gateway : kyma-gateway.kyma-system.svc.cluster.local rules : - accessStrategies : - config : {} handler : noop methods : - GET - POST - PUT - PATCH - DELETE - HEAD path : /.* service : host : xsk.<your-kyma-cluster-host> name : xsk port : 8080 Note Replace the <your-kyma-cluster-host> placeholder with your Kyma cluster host (e.g. c-xxxxxxx.kyma.xxx.xxx.xxx.ondemand.com )._ XSK versions Instead of using the latest tag (version), for production and development use cases it is recomended to use stable release version: All released versions can be found here . All XSK Docker images and tags (versions) can be found here . Navigate to your Kyma dashboard and select the default namespace. Click on the Deploy new resource button and select the deployment.yaml file. Note Alternatively the kubectl -f deployment.yaml could be used to deploy the resources. Create XSUAA service instance: From the Kyma dashboard, go to Service Management \u2192 Catalog . Find the Authorization & Trust Management service. Create new service instance. Provide the following additional parameters. { \"xsappname\" : \"dirigible-xsuaa\" , \"oauth2-configuration\" : { \"token-validity\" : 7200 , \"redirect-uris\" : [ \"https://dirigible.<your-kyma-cluster-host>\" ] }, \"scopes\" : [ { \"name\" : \"$XSAPPNAME.Developer\" , \"description\" : \"Developer scope\" }, { \"name\" : \"$XSAPPNAME.Operator\" , \"description\" : \"Operator scope\" } ], \"role-templates\" : [ { \"name\" : \"Developer\" , \"description\" : \"Developer related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"Operator\" , \"description\" : \"Operator related roles\" , \"scope-references\" : [ \"$XSAPPNAME.Operator\" ] } ], \"role-collections\" : [ { \"name\" : \"XSK Developer\" , \"description\" : \"XSK Developer\" , \"role-template-references\" : [ \"$XSAPPNAME.Developer\" ] }, { \"name\" : \"XSK Operator\" , \"description\" : \"XSK Operator\" , \"role-template-references\" : [ \"$XSAPPNAME.Operator\" ] } ] } Note Replace the <your-kyma-cluster-host> placeholder with your Kyma cluster host (e.g. c-xxxxxxx.kyma.xxx.xxx.xxx.ondemand.com ). Bind the servce instance to the xsk application. Assign the Developer and Operator roles. Log in. Additional Materials Step by step tutorial can be found here . SAP Cloud Platform is called SAP Business Technology Platform (SAP BTP) as of 2021. \u21a9","title":"Steps"},{"location":"setup/local/","text":"Local Setup Deploy XSK in Docker. Prerequisites Install Docker . Steps Start the container: Run docker run --name xsk \\ --rm -p 8080:8080 -p 8081:8081 \\ dirigiblelabs/xsk:latest with Mounted Volume docker run --name xsk \\ --rm -p 8080:8080 -p 8081:8081 \\ -v <your-local-directory>:/usr/local/tomcat/target \\ dirigiblelabs/xsk:latest with HANA Cloud docker run --name xsk \\ --rm -p 8080:8080 -p 8081:8081 \\ dirigiblelabs/xsk:latest \\ -e DIRIGIBLE_DATABASE_PROVIDER=custom \\ -e DIRIGIBLE_DATABASE_CUSTOM_DATASOURCES=HANA \\ -e DIRIGIBLE_DATABASE_DATASOURCE_NAME_DEFAULT=HANA \\ -e HANA_DRIVER=com.sap.db.jdbc.Driver \\ -e HANA_URL=jdbc:sap://<hanaHost>?encrypt=true&validateCertificate=true \\ -e HANA_USERNAME=<hanaUsername> \\ -e HANA_PASSWORD=<hanaPassword> Note Replace the <hanaHost> placeholder with the HANA Cloud host that will be used. Replace the <hanaUsername> placeholder with the HANA Cloud username that will be used. Replace the <hanaPassword> placeholder with the HANA Cloud password that will be used. Windows For Windows setup, issues may appear with the way the environment variables ( -e XXX=YYY ) are provided. Either they should be properly escaped, or they could be supplied as *.env file : docker run --name xsk \\ --env-file env-variables.env \\ --rm -p 8080:8080 -p 8081:8081 \\ dirigiblelabs/xsk:latest XSK versions Instead of using the latest tag (version), for production and development use cases it is recomended to use a stable release version: All released versions can be found here . All XSK Docker images and tags (versions) can be found here . Open a web browser and go to: http://localhost:8080/ Note The default user name and password are dirigible/dirigible Stop the container: docker stop dirigible","title":"Local"},{"location":"setup/local/#local-setup","text":"Deploy XSK in Docker. Prerequisites Install Docker .","title":"Local Setup"},{"location":"setup/local/#steps","text":"Start the container: Run docker run --name xsk \\ --rm -p 8080:8080 -p 8081:8081 \\ dirigiblelabs/xsk:latest with Mounted Volume docker run --name xsk \\ --rm -p 8080:8080 -p 8081:8081 \\ -v <your-local-directory>:/usr/local/tomcat/target \\ dirigiblelabs/xsk:latest with HANA Cloud docker run --name xsk \\ --rm -p 8080:8080 -p 8081:8081 \\ dirigiblelabs/xsk:latest \\ -e DIRIGIBLE_DATABASE_PROVIDER=custom \\ -e DIRIGIBLE_DATABASE_CUSTOM_DATASOURCES=HANA \\ -e DIRIGIBLE_DATABASE_DATASOURCE_NAME_DEFAULT=HANA \\ -e HANA_DRIVER=com.sap.db.jdbc.Driver \\ -e HANA_URL=jdbc:sap://<hanaHost>?encrypt=true&validateCertificate=true \\ -e HANA_USERNAME=<hanaUsername> \\ -e HANA_PASSWORD=<hanaPassword> Note Replace the <hanaHost> placeholder with the HANA Cloud host that will be used. Replace the <hanaUsername> placeholder with the HANA Cloud username that will be used. Replace the <hanaPassword> placeholder with the HANA Cloud password that will be used. Windows For Windows setup, issues may appear with the way the environment variables ( -e XXX=YYY ) are provided. Either they should be properly escaped, or they could be supplied as *.env file : docker run --name xsk \\ --env-file env-variables.env \\ --rm -p 8080:8080 -p 8081:8081 \\ dirigiblelabs/xsk:latest XSK versions Instead of using the latest tag (version), for production and development use cases it is recomended to use a stable release version: All released versions can be found here . All XSK Docker images and tags (versions) can be found here . Open a web browser and go to: http://localhost:8080/ Note The default user name and password are dirigible/dirigible Stop the container: docker stop dirigible","title":"Steps"}]}